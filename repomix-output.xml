
<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

</file_summary>

<directory_structure>
tball-pay-sdk/
  dist/
    solana-payments-sdk.js
    solana-payments-sdk.js.LICENSE.txt
    solana-payments-sdk.js.map
    tball-pay-sdk.umd.js
    tball-pay-sdk.umd.js.LICENSE.txt
    tball-pay-sdk.umd.js.map
  examples/
    checkout/
      .gitignore
      app.js
      index.html
      styles.css
      tball-pay-sdk.umd.js
  src/
    core/
      PaymentProcessor.js
    token/
      TokenRegistry.js
    utils/
      transaction.js
      validation.js
    wallet/
      PhantomAdapter.js
    index.js
  .gitignore
  package.json
  README.md
  webpack.config.js
tballpay-linkbuilder/
  .gitignore
  index.html
  script.js
  styles.css
notes.txt
README.md
</directory_structure>





<file path="tball-pay-sdk/dist/tball-pay-sdk.umd.js.LICENSE.txt">
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
</file>

<file path="tball-pay-sdk/examples/checkout/.gitignore">
.vercel
</file>

<file path="tball-pay-sdk/examples/checkout/app.js">
// Simple example app
document.addEventListener('DOMContentLoaded', async () => {
  // Initialize SDK (from your renamed UMD bundle)
  const { PaymentProcessor, PhantomAdapter } = TBallPaySDK;

  let sdk;
  try {
    // 1️⃣ Instantiate & configure
    sdk = new PaymentProcessor({ network: 'mainnet-beta' });
    sdk.setWalletAdapter(new PhantomAdapter());

    // 2️⃣ Initialize connection
    await sdk.init();

    console.log('SDK initialized successfully');
    updateStatus('SDK initialized. Please connect your wallet.');
  } catch (error) {
    console.error('Failed to initialize SDK:', error);
    updateStatus(`Error initializing: ${error.message}`, true);
    return;
  }

  // Wire up the UI
  setupEventListeners(sdk);
  populateTokenSelector(sdk);
});

function setupEventListeners(sdk) {
  const connectButton    = document.getElementById('connectWallet');
  const disconnectButton = document.getElementById('disconnectWallet');
  const sendButton       = document.getElementById('sendPayment');
  const tokenSelector    = document.getElementById('tokenSelector');

  connectButton?.addEventListener('click', async () => {
    try {
      updateStatus('Connecting wallet...');
      const wallet = await sdk.connectWallet();
      document.getElementById('walletInfo').textContent =
        `Connected: ${wallet.publicKey.toString().slice(0,8)}…${wallet.publicKey.toString().slice(-8)}`;
      updateStatus('Wallet connected successfully');

      const selectedToken = tokenSelector.value;
      const balance = await sdk.getTokenBalance(selectedToken);
      updateBalance(balance, selectedToken);
    } catch (error) {
      console.error('Connection error:', error);
      updateStatus(`Connection failed: ${error.message}`, true);
    }
  });

  disconnectButton?.addEventListener('click', async () => {
    try {
      await sdk.disconnectWallet();
      document.getElementById('walletInfo').textContent = 'Not connected';
      updateBalance(0, tokenSelector.value);
      updateStatus('Wallet disconnected');
    } catch (error) {
      console.error('Disconnection error:', error);
      updateStatus(`Disconnection failed: ${error.message}`, true);
    }
  });

  tokenSelector?.addEventListener('change', async () => {
    if (!sdk.wallet) return;
    try {
      const balance = await sdk.getTokenBalance(tokenSelector.value);
      updateBalance(balance, tokenSelector.value);
    } catch (error) {
      console.error('Error fetching balance:', error);
    }
  });

  sendButton?.addEventListener('click', async () => {
    try {
      const recipient = document.getElementById('recipient').value.trim();
      const amount    = parseFloat(document.getElementById('amount').value);
      const tokenMint = tokenSelector.value;

      if (!recipient) {
        return updateStatus('Please enter a recipient address', true);
      }
      if (isNaN(amount) || amount <= 0) {
        return updateStatus('Please enter a valid amount', true);
      }

      updateStatus('Preparing transaction...');

      if (!sdk.wallet) {
        await sdk.connectWallet();
      }

      updateStatus('Please approve the transaction in your wallet...');
      const result = await sdk.sendTokens({ recipient, amount, tokenMint });

      updateStatus(
        `Payment successful! View transaction: ${result.explorerUrl}`,
        false,
        true
      );

      const newBalance = await sdk.getTokenBalance(tokenMint);
      updateBalance(newBalance, tokenMint);
    } catch (error) {
      console.error('Payment error:', error);
      updateStatus(`Payment failed: ${error.message}`, true);
    }
  });
}

function populateTokenSelector(sdk) {
  const selector = document.getElementById('tokenSelector');
  if (!selector) return;
  selector.innerHTML = '';
  const tokens = sdk.tokenRegistry.getAllTokens();
  Object.values(tokens).forEach(token => {
    const opt = document.createElement('option');
    opt.value       = token.symbol;
    opt.textContent = `${token.name} (${token.symbol})`;
    selector.appendChild(opt);
  });
}

function updateStatus(message, isError = false, hasLink = false) {
  const statusEl = document.getElementById('statusMessage');
  if (!statusEl) return;
  if (hasLink && message.includes('http')) {
    const parts = message.split(/(https:\/\/[^\s]+)/);
    statusEl.innerHTML = parts.map(part =>
      part.startsWith('https://')
        ? `<a href="${part}" target="_blank" style="color: #0279FF; text-decoration: underline;">${part}</a>`
        : part
    ).join('');
  } else {
    statusEl.textContent = message;
  }
  statusEl.className = isError ? 'status error' : 'status success';
}

function updateBalance(balance, tokenSymbol) {
  const el = document.getElementById('balance');
  if (!el) return;
  el.textContent =
    typeof balance === 'number'
      ? `Balance: ${balance.toFixed(2)} ${tokenSymbol}`
      : `Balance: ${balance} ${tokenSymbol}`;
}
</file>

<file path="tball-pay-sdk/examples/checkout/styles.css">
body { 
    font-family: sans-serif; 
    text-align: center; 
    padding: 40px; 
    background: #0a0a0a; 
    color: #f5f5f5;
  }
  
  .card { 
    background: #161616; 
    padding: 30px; 
    border-radius: 12px; 
    max-width: 400px; 
    margin: 0 auto; 
    box-shadow: 0 8px 16px rgba(0,0,0,0.4); 
  }
  
  h1 { 
    font-size: 24px; 
    margin-bottom: 10px; 
    color: #ffffff;
  }
  
  p { 
    font-size: 18px; 
    color: #aaaaaa;
  }
  
  button { 
    padding: 12px 20px; 
    font-size: 16px; 
    background-color: #ff6b00; 
    color: white; 
    border: none; 
    border-radius: 6px; 
    cursor: pointer; 
    margin-top: 20px; 
    transition: background-color 0.2s;
  }
  
  button:hover { 
    background-color: #e05a00; 
  }
  
  #statusMessage { 
    margin-top: 20px; 
    font-weight: bold; 
    color: #dddddd;
  }
  
  a { 
    color: #ff9c41; 
    transition: color 0.2s;
  }
  
  a:hover {
    color: #ffbb80;
  }
  
  .container {
    max-width: 500px;
    margin: 0 auto;
    background: #161616;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.4);
  }
  
  label {
    display: block;
    text-align: left;
    color: #dddddd;
    margin-top: 15px;
    font-size: 14px;
  }
  
  input {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border-radius: 6px;
    border: 1px solid #333;
    font-size: 16px;
    box-sizing: border-box;
    background-color: #222222;
    color: #ffffff;
  }
  
  input:focus {
    border-color: #ff6b00;
    outline: none;
    box-shadow: 0 0 0 2px rgba(255, 107, 0, 0.3);
  }
  
  input::placeholder {
    color: #777777;
  }
  
  .hidden {
    display: none;
  }
  
  #output h2 {
    color: #ffffff;
    display: flex;
    align-items: center;
    margin-top: 30px;
  }
  
  #output h2:before {
    content: "🎯";
    margin-right: 8px;
  }
  
  #checkoutLink {
    font-size: 14px;
    background-color: #222222;
    padding: 12px;
    border: 1px solid #333;
    margin-bottom: 10px;
    width: 100%;
    box-sizing: border-box;
  }
  
  #copyButton {
    background-color: #333333;
    margin-bottom: 20px;
  }
  
  #copyButton:hover {
    background-color: #444444;
  }
  
  footer {
    margin-top: 30px;
    color: #777777;
  }
  
  /* Success and error states */
  .success {
    color: #ffbb80;
  }
  
  .error {
    color: #ff6b6b;
  }
</file>


<file path="tball-pay-sdk/src/token/TokenRegistry.js">
// src/token/TokenRegistry.js

/**
 * Registry for managing supported tokens
 */
class TokenRegistry {
    constructor() {
      this.tokens = {
        // Default tokens
        'TBALL': {
          name: 'Tetherball',
          symbol: 'TBALL',
          mintAddress: 'CWnzqQVFaD7sKsZyh116viC48G7qLz8pa5WhFpBEg9wM',
          decimals: 9,
          maxTransferAmount: 1000,
          logoUrl: 'https://example.com/tball-logo.png'
        }
        // Additional tokens can be added here
      };
    }
    
    /**
     * Get token by symbol or mint address
     * @param {string} tokenIdentifier - Token symbol or mint address
     * @returns {Object|null} - Token info or null if not found
     */
    getToken(tokenIdentifier) {
      // Check if direct lookup by token symbol works
      if (this.tokens[tokenIdentifier]) {
        return this.tokens[tokenIdentifier];
      }
      
      // Otherwise search by mint address
      return Object.values(this.tokens).find(
        token => token.mintAddress === tokenIdentifier
      ) || null;
    }
    
    /**
     * Add a new token to the registry
     * @param {Object} tokenInfo - Token information
     * @returns {Object} - Added token info
     */
    addToken(tokenInfo) {
      if (!tokenInfo.symbol || !tokenInfo.mintAddress) {
        throw new Error('Token must have symbol and mintAddress');
      }
      
      this.tokens[tokenInfo.symbol] = {
        name: tokenInfo.name || tokenInfo.symbol,
        symbol: tokenInfo.symbol,
        mintAddress: tokenInfo.mintAddress,
        decimals: tokenInfo.decimals || 9,
        maxTransferAmount: tokenInfo.maxTransferAmount || 1000,
        logoUrl: tokenInfo.logoUrl || null
      };
      
      return this.tokens[tokenInfo.symbol];
    }
    
    /**
     * Get all tokens in the registry
     * @returns {Object} - All tokens
     */
    getAllTokens() {
      return this.tokens;
    }
    
    /**
     * Remove a token from the registry
     * @param {string} symbol - Token symbol
     * @returns {boolean} - True if token was removed
     */
    removeToken(symbol) {
      if (this.tokens[symbol]) {
        delete this.tokens[symbol];
        return true;
      }
      return false;
    }
  }
  
  export { TokenRegistry };
</file>

<file path="tball-pay-sdk/src/utils/transaction.js">
// src/utils/transaction.js
import { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js';
import BN from 'bn.js';

// Constants
const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');
const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');

/**
 * Find the associated token account address
 * @param {PublicKey} owner - Account owner
 * @param {PublicKey} mint - Token mint address
 * @returns {Promise<PublicKey>} - Associated token account address
 */
export async function findAssociatedTokenAccount(owner, mint) {
  return PublicKey.findProgramAddressSync(
    [
      owner.toBuffer(),
      TOKEN_PROGRAM_ID.toBuffer(),
      mint.toBuffer(),
    ],
    ASSOCIATED_TOKEN_PROGRAM_ID
  )[0];
}

/**
 * Create instruction to create an associated token account
 * @param {PublicKey} payer - Fee payer
 * @param {PublicKey} owner - Account owner
 * @param {PublicKey} mint - Token mint
 * @returns {TransactionInstruction} - Transaction instruction
 */
export function createAssociatedTokenAccountInstruction(payer, owner, mint) {
  return new TransactionInstruction({
    keys: [
      { pubkey: payer, isSigner: true, isWritable: true },
      { pubkey: findAssociatedTokenAccount(owner, mint), isSigner: false, isWritable: true },
      { pubkey: owner, isSigner: false, isWritable: false },
      { pubkey: mint, isSigner: false, isWritable: false },
      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },
      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },
      { pubkey: ASSOCIATED_TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },
    ],
    programId: ASSOCIATED_TOKEN_PROGRAM_ID,
    data: Buffer.from([]),
  });
}

/**
 * Create instruction to transfer tokens
 * @param {PublicKey} source - Source account
 * @param {PublicKey} destination - Destination account
 * @param {PublicKey} owner - Token owner
 * @param {number} amount - Amount to transfer (in raw units)
 * @returns {TransactionInstruction} - Transaction instruction
 */
export function createTransferInstruction(source, destination, owner, amount) {
  return new TransactionInstruction({
    keys: [
      { pubkey: source, isSigner: false, isWritable: true },
      { pubkey: destination, isSigner: false, isWritable: true },
      { pubkey: owner, isSigner: true, isWritable: false },
    ],
    programId: TOKEN_PROGRAM_ID,
    data: Buffer.from([3, ...new BN(amount).toArray('le', 8)]), // 3 is the instruction index for transfer
  });
}
</file>

<file path="tball-pay-sdk/src/utils/validation.js">
// src/utils/validation.js
import { PublicKey } from '@solana/web3.js';

/**
 * Check if a string is a valid Solana address
 * @param {string} address - Address to validate
 * @returns {boolean} - True if address is valid
 */
export function isValidSolanaAddress(address) {
  try {
    new PublicKey(address);
    return true;
  } catch {
    return false;
  }
}

/**
 * Validate payment parameters
 * @param {Object} params - Payment parameters
 * @param {string} params.recipient - Recipient address
 * @param {number} params.amount - Amount to send
 * @param {Object} tokenInfo - Token information
 * @returns {Object} - Validation result {isValid, error}
 */
export function validatePaymentParams(params, tokenInfo) {
  const { recipient, amount } = params;
  
  if (!recipient || !isValidSolanaAddress(recipient)) {
    return {
      isValid: false,
      error: 'Invalid recipient address'
    };
  }
  
  if (!tokenInfo) {
    return {
      isValid: false,
      error: 'Invalid token'
    };
  }
  
  if (isNaN(amount) || amount <= 0) {
    return {
      isValid: false,
      error: 'Amount must be greater than 0'
    };
  }
  
  if (tokenInfo.maxTransferAmount && amount > tokenInfo.maxTransferAmount) {
    return {
      isValid: false,
      error: `Amount exceeds maximum transfer amount of ${tokenInfo.maxTransferAmount} ${tokenInfo.symbol}`
    };
  }
  
  return {
    isValid: true,
    error: null
  };
}
</file>

<file path="tball-pay-sdk/src/wallet/PhantomAdapter.js">
// src/wallet/PhantomAdapter.js
import { PublicKey } from '@solana/web3.js';

/**
 * Wallet adapter for Phantom wallet
 */
class PhantomAdapter {
  constructor() {
    this.wallet = null;
  }
  
  /**
   * Check if wallet is available
   * @returns {Promise<boolean>} - True if wallet is available
   */
  async checkAvailability() {
    if (!window.solana || !window.solana.isPhantom) {
      throw new Error('Phantom Wallet not detected. Please install it from https://phantom.app/');
    }
    return true;
  }
  
  /**
   * Connect to wallet
   * @param {Object} options - Connection options
   * @returns {Promise<Object>} - Wallet account info
   */
  async connect(options = {}) {
    try {
      await this.checkAvailability();
      
      // Disconnect existing connection if any
      try {
        await window.solana.disconnect();
      } catch (err) {
        console.log('No existing connection to disconnect');
      }
      
      // Connect with options
      const connectOptions = {
        onlyIfTrusted: false,
        forceReapproval: true, // Always force user to re-approve
        ...options
      };
      
      const response = await window.solana.connect(connectOptions);
      this.wallet = {
        publicKey: new PublicKey(response.publicKey.toString())
      };
      
      return this.wallet;
    } catch (error) {
      if (error.message.includes('User rejected')) {
        throw new Error('Connection rejected by user');
      }
      throw error;
    }
  }
  
  /**
   * Disconnect from wallet
   * @returns {Promise<boolean>} - True if disconnection was successful
   */
  async disconnect() {
    try {
      await window.solana.disconnect();
      this.wallet = null;
      return true;
    } catch (error) {
      throw error;
    }
  }
  
  /**
   * Get token balance
   * @param {Connection} connection - Solana connection
   * @param {PublicKey} owner - Token owner
   * @param {string} mintAddress - Token mint address
   * @returns {Promise<number>} - Token balance
   */
  async getTokenBalance(connection, owner, mintAddress) {
    const tokenAccounts = await connection.getParsedTokenAccountsByOwner(
      owner,
      { mint: new PublicKey(mintAddress) }
    );
    
    if (tokenAccounts.value.length > 0) {
      return tokenAccounts.value[0].account.data.parsed.info.tokenAmount.uiAmount;
    }
    
    return 0;
  }
  
  /**
   * Sign and send transaction
   * @param {Transaction} transaction - Transaction to sign and send
   * @returns {Promise<string>} - Transaction signature
   */
  async signAndSendTransaction(transaction) {
    try {
      const opts = {
        skipPreflight: false,
        preflightCommitment: 'processed',
        maxRetries: 5
      };
      
      const signed = await window.solana.signAndSendTransaction(transaction, opts);
      return signed.signature;
    } catch (error) {
      if (error.message.includes('User rejected')) {
        throw new Error('Transaction was rejected by user');
      }
      throw error;
    }
  }
}

export { PhantomAdapter };
</file>

<file path="tball-pay-sdk/src/index.js">
// src/index.js
import { PaymentProcessor } from './core/PaymentProcessor';
import { PhantomAdapter } from './wallet/PhantomAdapter';
import { TokenRegistry } from './token/TokenRegistry';
import * as TransactionUtils from './utils/transaction';
import * as ValidationUtils from './utils/validation';

// Export all components
export {
  PaymentProcessor,
  PhantomAdapter,
  TokenRegistry,
  TransactionUtils,
  ValidationUtils
};

// Default export for easier importing
export default {
  PaymentProcessor,
  PhantomAdapter,
  TokenRegistry,
  TransactionUtils,
  ValidationUtils
};

// Helper function to create a pre-configured SDK instance
export function createSolanaPaymentSDK(config = {}) {
  const processor = new PaymentProcessor(config);
  const phantomAdapter = new PhantomAdapter();
  
  // Set up the wallet adapter
  processor.setWalletAdapter(phantomAdapter);
  
  return {
    processor,
    phantomAdapter,
    tokenRegistry: processor.tokenRegistry,
    
    // Initialize everything
    async init() {
      await processor.init();
      return this;
    }
  };
}
</file>

<file path="tball-pay-sdk/.gitignore">
node_modules/
.env
</file>

<file path="tball-pay-sdk/package.json">
{
  "name": "tball-pay-sdk",
  "version": "1.0.0",
  "description": "Lightweight JavaScript SDK for TBALL token payments on the Solana blockchain",
  "keywords": [
    "solana",
    "payments",
    "sdk",
    "tball",
    "spl-token",
    "phantom"
  ],
  "author": "Zack Adams",
  "license": "MIT",
  "main": "dist/tball-pay-sdk.umd.js",
  "module": "dist/tball-pay-sdk.esm.js",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "webpack --mode=production",
    "build:dev": "webpack --mode=development",
    "dev": "webpack --mode=development --watch",
    "serve": "node server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-username/tball-pay-sdk.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/tball-pay-sdk/issues"
  },
  "homepage": "https://github.com/your-username/tball-pay-sdk#readme",
  "dependencies": {
    "@solana/web3.js": "^1.98.0",
    "bn.js": "^5.2.1",
    "buffer": "^6.0.3",
    "dotenv": "^16.4.7",
    "express": "^4.21.2"
  },
  "devDependencies": {
    "@babel/core": "^7.26.10",
    "@babel/preset-env": "^7.26.9",
    "babel-loader": "^10.0.0",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "exports": {
    ".": {
      "import": "./dist/tball-pay-sdk.esm.js",
      "require": "./dist/tball-pay-sdk.umd.js"
    }
  }
}
</file>

<file path="tball-pay-sdk/README.md">
# 🏐 Solana Payments SDK

A lightweight JavaScript SDK to power custom token payments on the Solana blockchain. Easily connect Phantom, manage balances, and send SPL tokens (like $TBALL) from any browser app — no smart contracts or backend required.

## 🚀 Features

- 🔐 Phantom wallet integration (connect/disconnect)
- 🪙 Send SPL tokens (e.g. TBALL) between wallets
- 🧠 Token registry with built-in metadata
- ✅ Input validation and transaction simulation
- 🔄 Real-time balance fetching
- 📦 Bundled for browser or module-based usage

## 📦 Installation

### Option 1: Import UMD bundle in browser (no build step)

```html
<script src="https://unpkg.com/@solana/web3.js@latest/lib/index.iife.js"></script>
<script src="https://unpkg.com/bn.js@5.2.1/lib/bn.js"></script>
<script src="./dist/solana-payments-sdk.js"></script>
```

### Option 2: Install via npm

```bash
npm install solana-payments-sdk
```

## 🧪 Example (Browser App)

### index.html

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Solana Payments SDK Example</title>
</head>
<body>
  <h1>Solana Payments SDK</h1>
  <button id="connectWallet">Connect Wallet</button>
  <button id="sendPayment">Send 5 TBALL</button>
  <div id="statusMessage"></div>
  <script src="https://unpkg.com/@solana/web3.js@latest/lib/index.iife.js"></script>
  <script src="https://unpkg.com/bn.js@5.2.1/lib/bn.js"></script>
  <script>
    window.BN = BN;
  </script>
  <script src="./dist/solana-payments-sdk.js"></script>
  <script>
    const { PaymentProcessor, PhantomAdapter } = SolanaPaymentsSDK;
    const processor = new PaymentProcessor({ network: 'mainnet-beta' });
    processor.setWalletAdapter(new PhantomAdapter());
    document.getElementById('connectWallet').onclick = async () => {
      await processor.init();
      await processor.connectWallet();
      alert('Wallet connected!');
    };
    document.getElementById('sendPayment').onclick = async () => {
      const result = await processor.sendTokens({
        recipient: 'EnterRecipientPublicKeyHere',
        amount: 5,
        tokenMint: 'TBALL'
      });
      document.getElementById('statusMessage').innerHTML =
        `Payment sent! <a href="${result.explorerUrl}" target="_blank">View on Solscan</a>`;
    };
  </script>
</body>
</html>
```

## ⚙️ API Overview

### PaymentProcessor(config)
- `network`: Solana cluster (e.g. 'mainnet-beta')
- `rpcEndpoint`: Optional custom RPC endpoint

#### Methods
- `init()` – Initialize SDK and Solana connection
- `setWalletAdapter(adapter)` – Attach a wallet adapter
- `connectWallet()` – Prompt Phantom to connect
- `disconnectWallet()` – Disconnect the wallet
- `getTokenBalance(tokenSymbolOrMint)` – Get the wallet's token balance
- `sendTokens({ recipient, amount, tokenMint })` – Send SPL tokens

### PhantomAdapter()
Adapter for Phantom Wallet. Required for connecting and signing.

### TokenRegistry
Manage supported tokens and metadata.

```javascript
const registry = new TokenRegistry();
registry.addToken({
  symbol: 'DOGE',
  mintAddress: 'YourTokenMintAddressHere',
  decimals: 9,
  maxTransferAmount: 100000
});
```

## 📁 Project Structure

```
solana-payments-sdk/
├── dist/                      # Bundled SDK (UMD)
├── examples/simple-payment/   # Full demo: index.html + app.js
├── src/
│   ├── core/PaymentProcessor.js
│   ├── wallet/PhantomAdapter.js
│   ├── token/TokenRegistry.js
│   └── utils/
│       ├── transaction.js
│       └── validation.js
├── webpack.config.js
└── package.json
```

## 🛡️ Security & Best Practices

- Always simulate and confirm transactions before marking them complete
- Validate addresses with `isValidSolanaAddress()` before sending
- Never hardcode private keys or RPC endpoints client-side
- Always check balances and limits before sending transactions

## 🧠 TODOs & Roadmap

- [ ] Add support for TransferChecked instruction
- [ ] Support other wallets (e.g. Solflare, Backpack)
- [ ] React/Vue wrappers
- [ ] Token swap & NFT utilities
- [ ] Add TypeScript types

## 👨‍🍳 Created by Zack Adams

Built for memecoins, games, marketplaces, and crypto-native experiences.
Let the blockchain be your backend.

## 🧵 Feedback / Issues

Open a GitHub issue or contact @hackingbaseball on Twitter.
</file>

<file path="tball-pay-sdk/webpack.config.js">
// webpack.config.js

const path = require('path');
const webpack = require('webpack');

module.exports = {
  // Entry point for your SDK
  entry: './src/index.js',

  // Output configuration
  output: {
    // Directory to emit bundled files
    path: path.resolve(__dirname, 'dist'),

    // UMD bundle for browsers and Node
    filename: 'tball-pay-sdk.umd.js',

    // Name of the global variable when included via <script>
    library: 'TBallPaySDK',

    // Export in UMD format (AMD, CommonJS, global)
    libraryTarget: 'umd',

    // Ensures the globalObject is correct in different environments
    globalObject: 'this',

    // Name the AMD module (optional, but conventional)
    umdNamedDefine: true
  },

  // Production mode for optimizations; use 'development' for faster builds
  mode: 'production',

  // Generate source maps for debugging
  devtool: 'source-map',

  module: {
    rules: [
      {
        // Transpile JS with Babel
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: [
              ['@babel/preset-env', {
                // Targets can be customized as needed
                targets: "> 0.25%, not dead"
              }]
            ]
          }
        }
      }
    ]
  },

  resolve: {
    // Allow omitting extensions when importing
    extensions: ['.js'],

    // Fallbacks for Node built-ins (e.g., Buffer)
    fallback: {
      buffer: require.resolve('buffer/')
    }
  },

  plugins: [
    // Provide Buffer automatically without import
    new webpack.ProvidePlugin({
      Buffer: ['buffer', 'Buffer']
    })
  ],

  // Don't bundle these dependencies; expect them as externals
  externals: {
    '@solana/web3.js': 'solanaWeb3',
    'bn.js': 'BN'
  }
};
</file>

<file path="tballpay-linkbuilder/.gitignore">
.vercel
</file>

<file path="tballpay-linkbuilder/index.html">
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>TBALL Pay – Link Builder</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>
  <div class="container">
    <h1>🏐 TBALL Pay Link Builder</h1>
    <p>Create a checkout link you can share with buyers, friends, or fans.</p>

    <form id="builderForm">
      <label for="label">Item Name:</label>
      <input type="text" id="label" placeholder="e.g. TBALL Hat" required />

      <label for="amount">Amount (TBALL):</label>
      <input type="number" id="amount" placeholder="e.g. 25" required min="0.01" step="0.01"/>

      <label for="recipient">Recipient Wallet:</label>
      <input type="text" id="recipient" placeholder="Your Solana wallet address" required />

      <button type="submit">Generate Link</button>
    </form>

    <div id="output" class="hidden">
      <h2>🎯 Your Checkout Link</h2>
      <input type="text" id="checkoutLink" readonly />
      <button id="copyButton">Copy to Clipboard</button>
    </div>

    <footer>
      <p><a href="https://github.com/your-org/tball-pay-sdk" target="_blank">View SDK on GitHub</a></p>
    </footer>
  </div>

  <script src="script.js"></script>
</body>
</html>
</file>

<file path="notes.txt">
Solana Meme Coin Payment Platform (Stripe-like) – Project Notes
Overview
Goal:
Build a platform that allows merchants to accept meme coins on Solana as payment, similar to Stripe.

Core Components:

SDK:
PaymentProcessor: Handles wallet connections, token balance queries, token transfers, and transaction confirmations.
TokenRegistry: Maintains metadata (mint addresses, decimals, symbols) for supported meme coins.
Helius Integration: Uses an API key to connect to Solana via Helius RPC.
Server:
A Node.js/Express server that serves static assets and provides an API endpoint (/api/get-key) to supply the Helius API key.
Current Status
SDK Implementation:
Key methods implemented: init(), connectWallet(), disconnectWallet(), getTokenBalance(), and sendTokens().
Development Environment:
Webpack configuration updated to polyfill Node's Buffer for browser compatibility.
A sample app demonstrating wallet connection, transaction processing, and UI interactions is in place.
Known Issues Resolved:
"Buffer is not defined" error resolved via Webpack’s ProvidePlugin and fallback settings.
Immediate Next Steps
Finalize and Harden the SDK:

Test and refine core functionalities.
Update the TokenRegistry to include accurate data for popular Solana meme coins.
Enhance error handling and logging throughout the SDK.
Develop Merchant-Focused Tools:

Build backend API endpoints for creating payment requests, transaction verifications, and handling webhook notifications.
Create a merchant dashboard for tracking payments, viewing transaction histories, etc.
Improve Developer Experience:

Create comprehensive documentation and usage guides.
Provide a “Quick Start” guide and sample integrations to simplify onboarding.
Security and Testing:

Conduct extensive integration testing on the Solana devnet.
Perform security audits and code reviews.
Set up error monitoring and logging for production.
Strategic Planning:

Perform market research on meme coin usage and adoption on Solana.
Plan a roadmap for additional features (e.g., recurring payments, refunds, integrations with other services).
Address any regulatory or compliance issues as the product moves toward production.
Future Considerations
Package the SDK as an npm module for easy integration.
Gather community feedback and iterate based on developer and merchant needs.
Develop a robust versioning and release strategy for ongoing improvements.
Take your break and come back to these notes when you're ready to resume the project. They should help guide your next steps toward building a complete, developer-friendly payment platform on Solana.
</file>

<file path="tball-pay-sdk/dist/tball-pay-sdk.umd.js">
/*! For license information please see tball-pay-sdk.umd.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("solanaWeb3"),require("BN")):"function"==typeof define&&define.amd?define("TBallPaySDK",["solanaWeb3","BN"],e):"object"==typeof exports?exports.TBallPaySDK=e(require("solanaWeb3"),require("BN")):t.TBallPaySDK=e(t.solanaWeb3,t.BN)}(this,((t,e)=>(()=>{var r={3:e=>{"use strict";e.exports=t},251:(t,e)=>{e.read=function(t,e,r,n,o){var i,s,a=8*o-n-1,f=(1<<a)-1,u=f>>1,c=-7,l=r?o-1:0,h=r?-1:1,p=t[e+l];for(l+=h,i=p&(1<<-c)-1,p>>=-c,c+=a;c>0;i=256*i+t[e+l],l+=h,c-=8);for(s=i&(1<<-c)-1,i>>=-c,c+=n;c>0;s=256*s+t[e+l],l+=h,c-=8);if(0===i)i=1-u;else{if(i===f)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,n),i-=u}return(p?-1:1)*s*Math.pow(2,i-n)},e.write=function(t,e,r,n,o,i){var s,a,f,u=8*i-o-1,c=(1<<u)-1,l=c>>1,h=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:i-1,y=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=c):(s=Math.floor(Math.log(e)/Math.LN2),e*(f=Math.pow(2,-s))<1&&(s--,f*=2),(e+=s+l>=1?h/f:h*Math.pow(2,1-l))*f>=2&&(s++,f/=2),s+l>=c?(a=0,s=c):s+l>=1?(a=(e*f-1)*Math.pow(2,o),s+=l):(a=e*Math.pow(2,l-1)*Math.pow(2,o),s=0));o>=8;t[r+p]=255&a,p+=y,a/=256,o-=8);for(s=s<<o|a,u+=o;u>0;t[r+p]=255&s,p+=y,s/=256,u-=8);t[r+p-y]|=128*g}},287:(t,e,r)=>{"use strict";const n=r(526),o=r(251),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.hp=f,e.IS=50;const s=2147483647;function a(t){if(t>s)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,f.prototype),e}function f(t,e,r){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return l(t)}return u(t,e,r)}function u(t,e,r){if("string"==typeof t)return function(t,e){if("string"==typeof e&&""!==e||(e="utf8"),!f.isEncoding(e))throw new TypeError("Unknown encoding: "+e);const r=0|g(t,e);let n=a(r);const o=n.write(t,e);return o!==r&&(n=n.slice(0,o)),n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(J(t,Uint8Array)){const e=new Uint8Array(t);return p(e.buffer,e.byteOffset,e.byteLength)}return h(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(J(t,ArrayBuffer)||t&&J(t.buffer,ArrayBuffer))return p(t,e,r);if("undefined"!=typeof SharedArrayBuffer&&(J(t,SharedArrayBuffer)||t&&J(t.buffer,SharedArrayBuffer)))return p(t,e,r);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return f.from(n,e,r);const o=function(t){if(f.isBuffer(t)){const e=0|y(t.length),r=a(e);return 0===r.length||t.copy(r,0,0,e),r}return void 0!==t.length?"number"!=typeof t.length||Z(t.length)?a(0):h(t):"Buffer"===t.type&&Array.isArray(t.data)?h(t.data):void 0}(t);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return f.from(t[Symbol.toPrimitive]("string"),e,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function l(t){return c(t),a(t<0?0:0|y(t))}function h(t){const e=t.length<0?0:0|y(t.length),r=a(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function p(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,f.prototype),n}function y(t){if(t>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|t}function g(t,e){if(f.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||J(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let o=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return q(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return G(t).length;default:if(o)return n?-1:q(t).length;e=(""+e).toLowerCase(),o=!0}}function d(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return x(this,e,r);case"utf8":case"utf-8":return k(this,e,r);case"ascii":return R(this,e,r);case"latin1":case"binary":return S(this,e,r);case"base64":return I(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function w(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,n,o){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Z(r=+r)&&(r=o?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(o)return-1;r=t.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof e&&(e=f.from(e,n)),f.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,o);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,o);throw new TypeError("val must be string, number or Buffer")}function b(t,e,r,n,o){let i,s=1,a=t.length,f=e.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;s=2,a/=2,f/=2,r/=2}function u(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(o){let n=-1;for(i=r;i<a;i++)if(u(t,i)===u(e,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===f)return n*s}else-1!==n&&(i-=i-n),n=-1}else for(r+f>a&&(r=a-f),i=r;i>=0;i--){let r=!0;for(let n=0;n<f;n++)if(u(t,i+n)!==u(e,n)){r=!1;break}if(r)return i}return-1}function B(t,e,r,n){r=Number(r)||0;const o=t.length-r;n?(n=Number(n))>o&&(n=o):n=o;const i=e.length;let s;for(n>i/2&&(n=i/2),s=0;s<n;++s){const n=parseInt(e.substr(2*s,2),16);if(Z(n))return s;t[r+s]=n}return s}function A(t,e,r,n){return Y(q(e,t.length-r),t,r,n)}function E(t,e,r,n){return Y(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function v(t,e,r,n){return Y(G(e),t,r,n)}function T(t,e,r,n){return Y(function(t,e){let r,n,o;const i=[];for(let s=0;s<t.length&&!((e-=2)<0);++s)r=t.charCodeAt(s),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(e,t.length-r),t,r,n)}function I(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function k(t,e,r){r=Math.min(t.length,r);const n=[];let o=e;for(;o<r;){const e=t[o];let i=null,s=e>239?4:e>223?3:e>191?2:1;if(o+s<=r){let r,n,a,f;switch(s){case 1:e<128&&(i=e);break;case 2:r=t[o+1],128==(192&r)&&(f=(31&e)<<6|63&r,f>127&&(i=f));break;case 3:r=t[o+1],n=t[o+2],128==(192&r)&&128==(192&n)&&(f=(15&e)<<12|(63&r)<<6|63&n,f>2047&&(f<55296||f>57343)&&(i=f));break;case 4:r=t[o+1],n=t[o+2],a=t[o+3],128==(192&r)&&128==(192&n)&&128==(192&a)&&(f=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&a,f>65535&&f<1114112&&(i=f))}}null===i?(i=65533,s=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),o+=s}return function(t){const e=t.length;if(e<=U)return String.fromCharCode.apply(String,t);let r="",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=U));return r}(n)}f.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),f.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(f.prototype,"parent",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.buffer}}),Object.defineProperty(f.prototype,"offset",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.byteOffset}}),f.poolSize=8192,f.from=function(t,e,r){return u(t,e,r)},Object.setPrototypeOf(f.prototype,Uint8Array.prototype),Object.setPrototypeOf(f,Uint8Array),f.alloc=function(t,e,r){return function(t,e,r){return c(t),t<=0?a(t):void 0!==e?"string"==typeof r?a(t).fill(e,r):a(t).fill(e):a(t)}(t,e,r)},f.allocUnsafe=function(t){return l(t)},f.allocUnsafeSlow=function(t){return l(t)},f.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==f.prototype},f.compare=function(t,e){if(J(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),J(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),!f.isBuffer(t)||!f.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let o=0,i=Math.min(r,n);o<i;++o)if(t[o]!==e[o]){r=t[o],n=e[o];break}return r<n?-1:n<r?1:0},f.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},f.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return f.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=f.allocUnsafe(e);let o=0;for(r=0;r<t.length;++r){let e=t[r];if(J(e,Uint8Array))o+e.length>n.length?(f.isBuffer(e)||(e=f.from(e)),e.copy(n,o)):Uint8Array.prototype.set.call(n,e,o);else{if(!f.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(n,o)}o+=e.length}return n},f.byteLength=g,f.prototype._isBuffer=!0,f.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<t;e+=2)w(this,e,e+1);return this},f.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<t;e+=4)w(this,e,e+3),w(this,e+1,e+2);return this},f.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<t;e+=8)w(this,e,e+7),w(this,e+1,e+6),w(this,e+2,e+5),w(this,e+3,e+4);return this},f.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?k(this,0,t):d.apply(this,arguments)},f.prototype.toLocaleString=f.prototype.toString,f.prototype.equals=function(t){if(!f.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===f.compare(this,t)},f.prototype.inspect=function(){let t="";const r=e.IS;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},i&&(f.prototype[i]=f.prototype.inspect),f.prototype.compare=function(t,e,r,n,o){if(J(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),!f.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),e<0||r>t.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&e>=r)return 0;if(n>=o)return-1;if(e>=r)return 1;if(this===t)return 0;let i=(o>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0);const a=Math.min(i,s),u=this.slice(n,o),c=t.slice(e,r);for(let t=0;t<a;++t)if(u[t]!==c[t]){i=u[t],s=c[t];break}return i<s?-1:s<i?1:0},f.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},f.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},f.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},f.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const o=this.length-e;if((void 0===r||r>o)&&(r=o),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let i=!1;for(;;)switch(n){case"hex":return B(this,t,e,r);case"utf8":case"utf-8":return A(this,t,e,r);case"ascii":case"latin1":case"binary":return E(this,t,e,r);case"base64":return v(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,e,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},f.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const U=4096;function R(t,e,r){let n="";r=Math.min(t.length,r);for(let o=e;o<r;++o)n+=String.fromCharCode(127&t[o]);return n}function S(t,e,r){let n="";r=Math.min(t.length,r);for(let o=e;o<r;++o)n+=String.fromCharCode(t[o]);return n}function x(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let o="";for(let n=e;n<r;++n)o+=H[t[n]];return o}function P(t,e,r){const n=t.slice(e,r);let o="";for(let t=0;t<n.length-1;t+=2)o+=String.fromCharCode(n[t]+256*n[t+1]);return o}function O(t,e,r){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function L(t,e,r,n,o,i){if(!f.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>o||e<i)throw new RangeError('"value" argument is out of bounds');if(r+n>t.length)throw new RangeError("Index out of range")}function C(t,e,r,n,o){K(e,n,o,t,r,7);let i=Number(e&BigInt(4294967295));t[r++]=i,i>>=8,t[r++]=i,i>>=8,t[r++]=i,i>>=8,t[r++]=i;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,r}function $(t,e,r,n,o){K(e,n,o,t,r,7);let i=Number(e&BigInt(4294967295));t[r+7]=i,i>>=8,t[r+6]=i,i>>=8,t[r+5]=i,i>>=8,t[r+4]=i;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=s,s>>=8,t[r+2]=s,s>>=8,t[r+1]=s,s>>=8,t[r]=s,r+8}function N(t,e,r,n,o,i){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function _(t,e,r,n,i){return e=+e,r>>>=0,i||N(t,0,r,4),o.write(t,e,r,n,23,4),r+4}function M(t,e,r,n,i){return e=+e,r>>>=0,i||N(t,0,r,8),o.write(t,e,r,n,52,8),r+8}f.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,f.prototype),n},f.prototype.readUintLE=f.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],o=1,i=0;for(;++i<e&&(o*=256);)n+=this[t+i]*o;return n},f.prototype.readUintBE=f.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t+--e],o=1;for(;e>0&&(o*=256);)n+=this[t+--e]*o;return n},f.prototype.readUint8=f.prototype.readUInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),this[t]},f.prototype.readUint16LE=f.prototype.readUInt16LE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]|this[t+1]<<8},f.prototype.readUint16BE=f.prototype.readUInt16BE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]<<8|this[t+1]},f.prototype.readUint32LE=f.prototype.readUInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},f.prototype.readUint32BE=f.prototype.readUInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},f.prototype.readBigUInt64LE=Q((function(t){z(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||V(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,o=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(o)<<BigInt(32))})),f.prototype.readBigUInt64BE=Q((function(t){z(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||V(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],o=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(o)})),f.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],o=1,i=0;for(;++i<e&&(o*=256);)n+=this[t+i]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*e)),n},f.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=e,o=1,i=this[t+--n];for(;n>0&&(o*=256);)i+=this[t+--n]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*e)),i},f.prototype.readInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},f.prototype.readInt16LE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt16BE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},f.prototype.readInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},f.prototype.readInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},f.prototype.readBigInt64LE=Q((function(t){z(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||V(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),f.prototype.readBigInt64BE=Q((function(t){z(t>>>=0,"offset");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||V(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),f.prototype.readFloatLE=function(t,e){return t>>>=0,e||O(t,4,this.length),o.read(this,t,!0,23,4)},f.prototype.readFloatBE=function(t,e){return t>>>=0,e||O(t,4,this.length),o.read(this,t,!1,23,4)},f.prototype.readDoubleLE=function(t,e){return t>>>=0,e||O(t,8,this.length),o.read(this,t,!0,52,8)},f.prototype.readDoubleBE=function(t,e){return t>>>=0,e||O(t,8,this.length),o.read(this,t,!1,52,8)},f.prototype.writeUintLE=f.prototype.writeUIntLE=function(t,e,r,n){t=+t,e>>>=0,r>>>=0,n||L(this,t,e,r,Math.pow(2,8*r)-1,0);let o=1,i=0;for(this[e]=255&t;++i<r&&(o*=256);)this[e+i]=t/o&255;return e+r},f.prototype.writeUintBE=f.prototype.writeUIntBE=function(t,e,r,n){t=+t,e>>>=0,r>>>=0,n||L(this,t,e,r,Math.pow(2,8*r)-1,0);let o=r-1,i=1;for(this[e+o]=255&t;--o>=0&&(i*=256);)this[e+o]=t/i&255;return e+r},f.prototype.writeUint8=f.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,1,255,0),this[e]=255&t,e+1},f.prototype.writeUint16LE=f.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},f.prototype.writeUint16BE=f.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},f.prototype.writeUint32LE=f.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},f.prototype.writeUint32BE=f.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},f.prototype.writeBigUInt64LE=Q((function(t,e=0){return C(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),f.prototype.writeBigUInt64BE=Q((function(t,e=0){return $(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),f.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);L(this,t,e,r,n-1,-n)}let o=0,i=1,s=0;for(this[e]=255&t;++o<r&&(i*=256);)t<0&&0===s&&0!==this[e+o-1]&&(s=1),this[e+o]=(t/i|0)-s&255;return e+r},f.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);L(this,t,e,r,n-1,-n)}let o=r-1,i=1,s=0;for(this[e+o]=255&t;--o>=0&&(i*=256);)t<0&&0===s&&0!==this[e+o+1]&&(s=1),this[e+o]=(t/i|0)-s&255;return e+r},f.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},f.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},f.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},f.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},f.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||L(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},f.prototype.writeBigInt64LE=Q((function(t,e=0){return C(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),f.prototype.writeBigInt64BE=Q((function(t,e=0){return $(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),f.prototype.writeFloatLE=function(t,e,r){return _(this,t,e,!0,r)},f.prototype.writeFloatBE=function(t,e,r){return _(this,t,e,!1,r)},f.prototype.writeDoubleLE=function(t,e,r){return M(this,t,e,!0,r)},f.prototype.writeDoubleBE=function(t,e,r){return M(this,t,e,!1,r)},f.prototype.copy=function(t,e,r,n){if(!f.isBuffer(t))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const o=n-r;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),o},f.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!f.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===t.length){const e=t.charCodeAt(0);("utf8"===n&&e<128||"latin1"===n)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;let o;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),"number"==typeof t)for(o=e;o<r;++o)this[o]=t;else{const i=f.isBuffer(t)?t:f.from(t,n),s=i.length;if(0===s)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(o=0;o<r-e;++o)this[o+e]=i[o%s]}return this};const W={};function j(t,e,r){W[t]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function F(t){let e="",r=t.length;const n="-"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function K(t,e,r,n,o,i){if(t>r||t<e){const n="bigint"==typeof e?"n":"";let o;throw o=i>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new W.ERR_OUT_OF_RANGE("value",o,t)}!function(t,e,r){z(e,"offset"),void 0!==t[e]&&void 0!==t[e+r]||V(e,t.length-(r+1))}(n,o,i)}function z(t,e){if("number"!=typeof t)throw new W.ERR_INVALID_ARG_TYPE(e,"number",t)}function V(t,e,r){if(Math.floor(t)!==t)throw z(t,r),new W.ERR_OUT_OF_RANGE(r||"offset","an integer",t);if(e<0)throw new W.ERR_BUFFER_OUT_OF_BOUNDS;throw new W.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${e}`,t)}j("ERR_BUFFER_OUT_OF_BOUNDS",(function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),j("ERR_INVALID_ARG_TYPE",(function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`}),TypeError),j("ERR_OUT_OF_RANGE",(function(t,e,r){let n=`The value of "${t}" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=F(String(r)):"bigint"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=F(o)),o+="n"),n+=` It must be ${e}. Received ${o}`,n}),RangeError);const D=/[^+/0-9A-Za-z-_]/g;function q(t,e){let r;e=e||1/0;const n=t.length;let o=null;const i=[];for(let s=0;s<n;++s){if(r=t.charCodeAt(s),r>55295&&r<57344){if(!o){if(r>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(e-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(e-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((e-=1)<0)break;i.push(r)}else if(r<2048){if((e-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function G(t){return n.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(D,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function Y(t,e,r,n){let o;for(o=0;o<n&&!(o+r>=e.length||o>=t.length);++o)e[o+r]=t[o];return o}function J(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function Z(t){return t!=t}const H=function(){const t="0123456789abcdef",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let o=0;o<16;++o)e[n+o]=t[r]+t[o]}return e}();function Q(t){return"undefined"==typeof BigInt?X:t}function X(){throw new Error("BigInt not supported")}},526:(t,e)=>{"use strict";e.byteLength=function(t){var e=a(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,i=a(t),s=i[0],f=i[1],u=new o(function(t,e,r){return 3*(e+r)/4-r}(0,s,f)),c=0,l=f>0?s-4:s;for(r=0;r<l;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],u[c++]=e>>16&255,u[c++]=e>>8&255,u[c++]=255&e;return 2===f&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,u[c++]=255&e),1===f&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,u[c++]=e>>8&255,u[c++]=255&e),u},e.fromByteArray=function(t){for(var e,n=t.length,o=n%3,i=[],s=16383,a=0,u=n-o;a<u;a+=s)i.push(f(t,a,a+s>u?u:a+s));return 1===o?(e=t[n-1],i.push(r[e>>2]+r[e<<4&63]+"==")):2===o&&(e=(t[n-2]<<8)+t[n-1],i.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),i.join("")};for(var r=[],n=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0;s<64;++s)r[s]=i[s],n[i.charCodeAt(s)]=s;function a(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=t.indexOf("=");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function f(t,e,n){for(var o,i,s=[],a=e;a<n;a+=3)o=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),s.push(r[(i=o)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return s.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},620:t=>{"use strict";t.exports=e}},n={};function o(t){var e=n[t];if(void 0!==e)return e.exports;var i=n[t]={exports:{}};return r[t](i,i.exports,o),i.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var r in e)o.o(e,r)&&!o.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{"use strict";o.r(i),o.d(i,{PaymentProcessor:()=>d,PhantomAdapter:()=>w,TokenRegistry:()=>n,TransactionUtils:()=>t,ValidationUtils:()=>e,createSolanaPaymentSDK:()=>b,default:()=>m});var t={};o.r(t),o.d(t,{createAssociatedTokenAccountInstruction:()=>h,createTransferInstruction:()=>p,findAssociatedTokenAccount:()=>l});var e={};o.r(e),o.d(e,{isValidSolanaAddress:()=>y,validatePaymentParams:()=>g});var r=o(3);class n{constructor(){this.tokens={TBALL:{name:"Tetherball",symbol:"TBALL",mintAddress:"CWnzqQVFaD7sKsZyh116viC48G7qLz8pa5WhFpBEg9wM",decimals:9,maxTransferAmount:1e3,logoUrl:"https://example.com/tball-logo.png"}}}getToken(t){return this.tokens[t]?this.tokens[t]:Object.values(this.tokens).find((e=>e.mintAddress===t))||null}addToken(t){if(!t.symbol||!t.mintAddress)throw new Error("Token must have symbol and mintAddress");return this.tokens[t.symbol]={name:t.name||t.symbol,symbol:t.symbol,mintAddress:t.mintAddress,decimals:t.decimals||9,maxTransferAmount:t.maxTransferAmount||1e3,logoUrl:t.logoUrl||null},this.tokens[t.symbol]}getAllTokens(){return this.tokens}removeToken(t){return!!this.tokens[t]&&(delete this.tokens[t],!0)}}var s=o(620),a=o.n(s),f=o(287).hp;const u=new r.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"),c=new r.PublicKey("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");async function l(t,e){return r.PublicKey.findProgramAddressSync([t.toBuffer(),u.toBuffer(),e.toBuffer()],c)[0]}function h(t,e,n){return new r.TransactionInstruction({keys:[{pubkey:t,isSigner:!0,isWritable:!0},{pubkey:l(e,n),isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:r.SystemProgram.programId,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!1}],programId:c,data:f.from([])})}function p(t,e,n,o){return new r.TransactionInstruction({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1}],programId:u,data:f.from([3,...new(a())(o).toArray("le",8)])})}function y(t){try{return new r.PublicKey(t),!0}catch{return!1}}function g(t,e){const{recipient:r,amount:n}=t;return r&&y(r)?e?isNaN(n)||n<=0?{isValid:!1,error:"Amount must be greater than 0"}:e.maxTransferAmount&&n>e.maxTransferAmount?{isValid:!1,error:`Amount exceeds maximum transfer amount of ${e.maxTransferAmount} ${e.symbol}`}:{isValid:!0,error:null}:{isValid:!1,error:"Invalid token"}:{isValid:!1,error:"Invalid recipient address"}}class d{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.config={network:t.network||"mainnet-beta",rpcEndpoint:t.rpcEndpoint||null,commitment:t.commitment||"processed",confirmationBlocks:t.confirmationBlocks||32,transactionTimeout:t.transactionTimeout||9e4,retryAttempts:t.retryAttempts||5,...t},this.wallet=null,this.connection=null,this.walletAdapter=null,this.tokenRegistry=new n,this.initialized=!1}async init(){try{return this.initialized||(console.log("Initializing payment processor..."),this.config.rpcEndpoint||(this.config.rpcEndpoint="https://rpc.helius.xyz/?api-key=bbcc6a7a-9027-4cb3-a131-83844043ba33"),this.connection=new r.Connection(this.config.rpcEndpoint,{commitment:this.config.commitment,wsEndpoint:this.config.rpcEndpoint.replace("https","wss"),confirmTransactionInitialTimeout:12e4}),this.initialized=!0),!0}catch(t){throw console.error("Failed to initialize payment processor:",t),t}}setWalletAdapter(t){this.walletAdapter=t}async connectWallet(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{if(await this.init(),!this.walletAdapter)throw new Error("No wallet adapter set. Call setWalletAdapter() first.");const e=await this.walletAdapter.connect(t);return this.wallet=e,e}catch(t){throw console.error("Wallet connection error:",t),t}}async disconnectWallet(){try{if(!this.walletAdapter)throw new Error("No wallet adapter set");return await this.walletAdapter.disconnect(),this.wallet=null,!0}catch(t){throw console.error("Wallet disconnection error:",t),t}}async getTokenBalance(t){try{if(!this.wallet)throw new Error("Wallet not connected");const e=this.tokenRegistry.getToken(t);if(!e)throw new Error(`Unknown token: ${t}`);return await this.walletAdapter.getTokenBalance(this.connection,this.wallet.publicKey,e.mintAddress)}catch(t){throw console.error("Error getting token balance:",t),t}}async sendTokens(t){try{const{recipient:e,amount:r,tokenMint:n,memo:o}=t;if(!this.wallet)throw new Error("Wallet not connected");if(!this.walletAdapter)throw new Error("No wallet adapter set");if(!e||!y(e))throw new Error("Invalid recipient address");const i=this.tokenRegistry.getToken(n);if(!i)throw new Error(`Unknown token: ${n}`);if(isNaN(r)||r<=0||r>i.maxTransferAmount)throw new Error(`Amount must be between 0 and ${i.maxTransferAmount} ${i.symbol}`);const s=await this.createTokenTransferTransaction({recipient:e,amount:r,tokenMint:n,memo:o}),a=await this.connection.simulateTransaction(s);if(a.value.err)throw new Error(`Transaction simulation failed: ${JSON.stringify(a.value.err)}`);const f=await this.walletAdapter.signAndSendTransaction(s);return{signature:f,confirmation:await this.waitForConfirmation(f),explorerUrl:`https://solscan.io/tx/${f}`}}catch(t){throw console.error("Payment error:",t),t}}async createTokenTransferTransaction(t){const{recipient:e,amount:n,tokenMint:o,memo:i}=t,s=new r.PublicKey(e),a=this.tokenRegistry.getToken(o),f=new r.PublicKey(a.mintAddress),u=Math.floor(n*Math.pow(10,a.decimals)),c=await l(this.wallet.publicKey,f),y=await l(s,f);let g=new r.Transaction;await this.connection.getAccountInfo(y)||g.add(h(this.wallet.publicKey,s,f)),g.add(p(c,y,this.wallet.publicKey,u));const{blockhash:d,lastValidBlockHeight:w}=await this.connection.getLatestBlockhash("confirmed");return g.recentBlockhash=d,g.lastValidBlockHeight=w,g.feePayer=this.wallet.publicKey,g}async waitForConfirmation(t){let e,r,n=0;return new Promise((async(o,i)=>{const s=async()=>{console.log(`Checking confirmation attempt ${n+1}/${this.config.retryAttempts}`);try{const s=await this.connection.getSignatureStatus(t);if(console.log("Transaction status:",s?.value?.confirmationStatus),s?.value){const t=s.value.confirmations;if(s.value.err)return clearInterval(r),clearTimeout(e),void i(new Error("Transaction failed on chain"));if(t>=this.config.confirmationBlocks||"finalized"===s.value.confirmationStatus)return clearInterval(r),clearTimeout(e),void o(s)}else if(n>=this.config.retryAttempts)return clearInterval(r),clearTimeout(e),void o({status:"pending",signature:t,explorerUrl:`https://solscan.io/tx/${t}`});n++}catch(t){console.warn("Confirmation check failed:",t),n++}};e=setTimeout((()=>{clearInterval(r),i(new Error("Transaction confirmation timeout"))}),this.config.transactionTimeout),r=setInterval(s,2e3),await s()}))}}class w{constructor(){this.wallet=null}async checkAvailability(){if(!window.solana||!window.solana.isPhantom)throw new Error("Phantom Wallet not detected. Please install it from https://phantom.app/");return!0}async connect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{await this.checkAvailability();try{await window.solana.disconnect()}catch(t){console.log("No existing connection to disconnect")}const e={onlyIfTrusted:!1,forceReapproval:!0,...t},n=await window.solana.connect(e);return this.wallet={publicKey:new r.PublicKey(n.publicKey.toString())},this.wallet}catch(t){if(t.message.includes("User rejected"))throw new Error("Connection rejected by user");throw t}}async disconnect(){try{return await window.solana.disconnect(),this.wallet=null,!0}catch(t){throw t}}async getTokenBalance(t,e,n){const o=await t.getParsedTokenAccountsByOwner(e,{mint:new r.PublicKey(n)});return o.value.length>0?o.value[0].account.data.parsed.info.tokenAmount.uiAmount:0}async signAndSendTransaction(t){try{const e={skipPreflight:!1,preflightCommitment:"processed",maxRetries:5};return(await window.solana.signAndSendTransaction(t,e)).signature}catch(t){if(t.message.includes("User rejected"))throw new Error("Transaction was rejected by user");throw t}}}const m={PaymentProcessor:d,PhantomAdapter:w,TokenRegistry:n,TransactionUtils:t,ValidationUtils:e};function b(){const t=new d(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),e=new w;return t.setWalletAdapter(e),{processor:t,phantomAdapter:e,tokenRegistry:t.tokenRegistry,async init(){return await t.init(),this}}}})(),i})()));
//# sourceMappingURL=tball-pay-sdk.umd.js.map
</file>

<file path="tball-pay-sdk/dist/tball-pay-sdk.umd.js.map">
{"version":3,"file":"tball-pay-sdk.umd.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,cAAeA,QAAQ,OAC/B,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,cAAe,CAAC,aAAc,MAAOJ,GAClB,iBAAZC,QACdA,QAAqB,YAAID,EAAQG,QAAQ,cAAeA,QAAQ,OAEhEJ,EAAkB,YAAIC,EAAQD,EAAiB,WAAGA,EAAS,GAC5D,CATD,CASGO,MAAM,CAACC,EAAgCC,oCCT1CN,EAAOD,QAAUM,eCCjBN,EAAQQ,KAAO,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTC,EAAIT,EAAQE,EAAS,EAAK,EAC1BQ,EAAIV,GAAQ,EAAI,EAChBW,EAAIb,EAAOC,EAASU,GAOxB,IALAA,GAAKC,EAELP,EAAIQ,GAAM,IAAOH,GAAU,EAC3BG,KAAQH,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAS,IAAJA,EAAWL,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAKvE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAS,IAAJA,EAAWN,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIQ,IAAsBC,KAAdF,GAAK,EAAI,GAE5BP,GAAQU,KAAKC,IAAI,EAAGd,GACpBE,GAAQI,CACV,CACA,OAAQI,GAAK,EAAI,GAAKP,EAAIU,KAAKC,IAAI,EAAGZ,EAAIF,EAC5C,EAEAZ,EAAQ2B,MAAQ,SAAUlB,EAAQmB,EAAOlB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EAAGc,EACNb,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBa,EAAe,KAATlB,EAAca,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1DN,EAAIT,EAAO,EAAKE,EAAS,EACzBQ,EAAIV,EAAO,GAAK,EAChBW,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,KAC5BT,EAAIiB,MAAMJ,GAAS,EAAI,EACvBd,EAAIG,IAEJH,EAAIW,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIZ,IAAM,IAClCA,IACAe,GAAK,IAGLD,GADEd,EAAII,GAAS,EACNY,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIR,IAEpBW,GAAK,IACff,IACAe,GAAK,GAGHf,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMa,EAAQC,EAAK,GAAKJ,KAAKC,IAAI,EAAGd,GACpCE,GAAQI,IAERH,EAAIa,EAAQH,KAAKC,IAAI,EAAGR,EAAQ,GAAKO,KAAKC,IAAI,EAAGd,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAASU,GAAS,IAAJL,EAAUK,GAAKC,EAAGN,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAASU,GAAS,IAAJN,EAAUM,GAAKC,EAAGP,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAASU,EAAIC,IAAU,IAAJC,CAC5B,8BC1EA,MAAMc,EAAS,EAAQ,KACjBC,EAAU,EAAQ,KAClBC,EACe,mBAAXC,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENvC,EAAQ,GAASwC,EAEjBxC,EAAQ,GAAoB,GAE5B,MAAMyC,EAAe,WAwDrB,SAASC,EAAcC,GACrB,GAAIA,EAASF,EACX,MAAM,IAAIG,WAAW,cAAgBD,EAAS,kCAGhD,MAAME,EAAM,IAAIC,WAAWH,GAE3B,OADAI,OAAOC,eAAeH,EAAKL,EAAOS,WAC3BJ,CACT,CAYA,SAASL,EAAQU,EAAKC,EAAkBR,GAEtC,GAAmB,iBAARO,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,EACrB,CACA,OAAOI,EAAKJ,EAAKC,EAAkBR,EACrC,CAIA,SAASW,EAAM1B,EAAOuB,EAAkBR,GACtC,GAAqB,iBAAVf,EACT,OAqHJ,SAAqB2B,EAAQC,GAK3B,GAJwB,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRhB,EAAOiB,WAAWD,GACrB,MAAM,IAAIJ,UAAU,qBAAuBI,GAG7C,MAAMb,EAAwC,EAA/Be,EAAWH,EAAQC,GAClC,IAAIX,EAAMH,EAAaC,GAEvB,MAAMgB,EAASd,EAAIlB,MAAM4B,EAAQC,GASjC,OAPIG,IAAWhB,IAIbE,EAAMA,EAAIe,MAAM,EAAGD,IAGdd,CACT,CA3IWgB,CAAWjC,EAAOuB,GAG3B,GAAIW,YAAYC,OAAOnC,GACrB,OAkJJ,SAAwBoC,GACtB,GAAIC,EAAWD,EAAWlB,YAAa,CACrC,MAAMoB,EAAO,IAAIpB,WAAWkB,GAC5B,OAAOG,EAAgBD,EAAKzD,OAAQyD,EAAKE,WAAYF,EAAKR,WAC5D,CACA,OAAOW,EAAcL,EACvB,CAxJWM,CAAc1C,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIwB,UACR,yHACiDxB,GAIrD,GAAIqC,EAAWrC,EAAOkC,cACjBlC,GAASqC,EAAWrC,EAAMnB,OAAQqD,aACrC,OAAOK,EAAgBvC,EAAOuB,EAAkBR,GAGlD,GAAiC,oBAAtB4B,oBACNN,EAAWrC,EAAO2C,oBAClB3C,GAASqC,EAAWrC,EAAMnB,OAAQ8D,oBACrC,OAAOJ,EAAgBvC,EAAOuB,EAAkBR,GAGlD,GAAqB,iBAAVf,EACT,MAAM,IAAIwB,UACR,yEAIJ,MAAMoB,EAAU5C,EAAM4C,SAAW5C,EAAM4C,UACvC,GAAe,MAAXA,GAAmBA,IAAY5C,EACjC,OAAOY,EAAOc,KAAKkB,EAASrB,EAAkBR,GAGhD,MAAM8B,EAkJR,SAAqBC,GACnB,GAAIlC,EAAOmC,SAASD,GAAM,CACxB,MAAME,EAA4B,EAAtBC,EAAQH,EAAI/B,QAClBE,EAAMH,EAAakC,GAEzB,OAAmB,IAAf/B,EAAIF,QAIR+B,EAAIR,KAAKrB,EAAK,EAAG,EAAG+B,GAHX/B,CAKX,CAEA,YAAmBiC,IAAfJ,EAAI/B,OACoB,iBAAf+B,EAAI/B,QAAuBoC,EAAYL,EAAI/B,QAC7CD,EAAa,GAEf2B,EAAcK,GAGN,WAAbA,EAAIM,MAAqBC,MAAMC,QAAQR,EAAIS,MACtCd,EAAcK,EAAIS,WAD3B,CAGF,CAzKYC,CAAWxD,GACrB,GAAI6C,EAAG,OAAOA,EAEd,GAAsB,oBAAXlC,QAAgD,MAAtBA,OAAO8C,aACH,mBAA9BzD,EAAMW,OAAO8C,aACtB,OAAO7C,EAAOc,KAAK1B,EAAMW,OAAO8C,aAAa,UAAWlC,EAAkBR,GAG5E,MAAM,IAAIS,UACR,yHACiDxB,EAErD,CAmBA,SAAS0D,EAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAInC,UAAU,0CACf,GAAImC,EAAO,EAChB,MAAM,IAAI3C,WAAW,cAAgB2C,EAAO,iCAEhD,CA0BA,SAASlC,EAAakC,GAEpB,OADAD,EAAWC,GACJ7C,EAAa6C,EAAO,EAAI,EAAoB,EAAhBV,EAAQU,GAC7C,CAuCA,SAASlB,EAAemB,GACtB,MAAM7C,EAAS6C,EAAM7C,OAAS,EAAI,EAA4B,EAAxBkC,EAAQW,EAAM7C,QAC9CE,EAAMH,EAAaC,GACzB,IAAK,IAAIvB,EAAI,EAAGA,EAAIuB,EAAQvB,GAAK,EAC/ByB,EAAIzB,GAAgB,IAAXoE,EAAMpE,GAEjB,OAAOyB,CACT,CAUA,SAASsB,EAAiBqB,EAAOpB,EAAYzB,GAC3C,GAAIyB,EAAa,GAAKoB,EAAM9B,WAAaU,EACvC,MAAM,IAAIxB,WAAW,wCAGvB,GAAI4C,EAAM9B,WAAaU,GAAczB,GAAU,GAC7C,MAAM,IAAIC,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiBiC,IAAfV,QAAuCU,IAAXnC,EACxB,IAAIG,WAAW0C,QACDV,IAAXnC,EACH,IAAIG,WAAW0C,EAAOpB,GAEtB,IAAItB,WAAW0C,EAAOpB,EAAYzB,GAI1CI,OAAOC,eAAeH,EAAKL,EAAOS,WAE3BJ,CACT,CA2BA,SAASgC,EAASlC,GAGhB,GAAIA,GAAUF,EACZ,MAAM,IAAIG,WAAW,0DACaH,EAAagD,SAAS,IAAM,UAEhE,OAAgB,EAAT9C,CACT,CAsGA,SAASe,EAAYH,EAAQC,GAC3B,GAAIhB,EAAOmC,SAASpB,GAClB,OAAOA,EAAOZ,OAEhB,GAAImB,YAAYC,OAAOR,IAAWU,EAAWV,EAAQO,aACnD,OAAOP,EAAOG,WAEhB,GAAsB,iBAAXH,EACT,MAAM,IAAIH,UACR,kGAC0BG,GAI9B,MAAMqB,EAAMrB,EAAOZ,OACb+C,EAAaC,UAAUhD,OAAS,IAAsB,IAAjBgD,UAAU,GACrD,IAAKD,GAAqB,IAARd,EAAW,OAAO,EAGpC,IAAIgB,GAAc,EAClB,OACE,OAAQpC,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOoB,EACT,IAAK,OACL,IAAK,QACH,OAAOiB,EAAYtC,GAAQZ,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANiC,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOkB,EAAcvC,GAAQZ,OAC/B,QACE,GAAIiD,EACF,OAAOF,GAAa,EAAIG,EAAYtC,GAAQZ,OAE9Ca,GAAY,GAAKA,GAAUuC,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAcxC,EAAUyC,EAAOC,GACtC,IAAIN,GAAc,EAclB,SALcd,IAAVmB,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQ5F,KAAKsC,OACf,MAAO,GAOT,SAJYmC,IAARoB,GAAqBA,EAAM7F,KAAKsC,UAClCuD,EAAM7F,KAAKsC,QAGTuD,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKzC,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAO2C,EAAS9F,KAAM4F,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOE,EAAU/F,KAAM4F,EAAOC,GAEhC,IAAK,QACH,OAAOG,EAAWhG,KAAM4F,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOI,EAAYjG,KAAM4F,EAAOC,GAElC,IAAK,SACH,OAAOK,EAAYlG,KAAM4F,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOM,EAAanG,KAAM4F,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAIxC,UAAU,qBAAuBI,GAC5DA,GAAYA,EAAW,IAAIuC,cAC3BH,GAAc,EAGtB,CAUA,SAASa,EAAMhC,EAAGiC,EAAG3F,GACnB,MAAMK,EAAIqD,EAAEiC,GACZjC,EAAEiC,GAAKjC,EAAE1D,GACT0D,EAAE1D,GAAKK,CACT,CA2IA,SAASuF,EAAsBlG,EAAQmG,EAAKxC,EAAYZ,EAAUqD,GAEhE,GAAsB,IAAlBpG,EAAOkC,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfyB,GACTZ,EAAWY,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZW,EADJX,GAAcA,KAGZA,EAAayC,EAAM,EAAKpG,EAAOkC,OAAS,GAItCyB,EAAa,IAAGA,EAAa3D,EAAOkC,OAASyB,GAC7CA,GAAc3D,EAAOkC,OAAQ,CAC/B,GAAIkE,EAAK,OAAQ,EACZzC,EAAa3D,EAAOkC,OAAS,CACpC,MAAO,GAAIyB,EAAa,EAAG,CACzB,IAAIyC,EACC,OAAQ,EADJzC,EAAa,CAExB,CAQA,GALmB,iBAARwC,IACTA,EAAMpE,EAAOc,KAAKsD,EAAKpD,IAIrBhB,EAAOmC,SAASiC,GAElB,OAAmB,IAAfA,EAAIjE,QACE,EAEHmE,EAAarG,EAAQmG,EAAKxC,EAAYZ,EAAUqD,GAClD,GAAmB,iBAARD,EAEhB,OADAA,GAAY,IACgC,mBAAjC9D,WAAWG,UAAU8D,QAC1BF,EACK/D,WAAWG,UAAU8D,QAAQC,KAAKvG,EAAQmG,EAAKxC,GAE/CtB,WAAWG,UAAUgE,YAAYD,KAAKvG,EAAQmG,EAAKxC,GAGvD0C,EAAarG,EAAQ,CAACmG,GAAMxC,EAAYZ,EAAUqD,GAG3D,MAAM,IAAIzD,UAAU,uCACtB,CAEA,SAAS0D,EAAcI,EAAKN,EAAKxC,EAAYZ,EAAUqD,GACrD,IA0BIzF,EA1BA+F,EAAY,EACZC,EAAYF,EAAIvE,OAChB0E,EAAYT,EAAIjE,OAEpB,QAAiBmC,IAAbtB,IAEe,UADjBA,EAAW8D,OAAO9D,GAAUuC,gBACY,UAAbvC,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAI0D,EAAIvE,OAAS,GAAKiE,EAAIjE,OAAS,EACjC,OAAQ,EAEVwE,EAAY,EACZC,GAAa,EACbC,GAAa,EACbjD,GAAc,CAChB,CAGF,SAAS5D,EAAMqC,EAAKzB,GAClB,OAAkB,IAAd+F,EACKtE,EAAIzB,GAEJyB,EAAI0E,aAAanG,EAAI+F,EAEhC,CAGA,GAAIN,EAAK,CACP,IAAIW,GAAc,EAClB,IAAKpG,EAAIgD,EAAYhD,EAAIgG,EAAWhG,IAClC,GAAIZ,EAAK0G,EAAK9F,KAAOZ,EAAKoG,GAAqB,IAAhBY,EAAoB,EAAIpG,EAAIoG,IAEzD,IADoB,IAAhBA,IAAmBA,EAAapG,GAChCA,EAAIoG,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmBpG,GAAKA,EAAIoG,GAChCA,GAAc,CAGpB,MAEE,IADIpD,EAAaiD,EAAYD,IAAWhD,EAAagD,EAAYC,GAC5DjG,EAAIgD,EAAYhD,GAAK,EAAGA,IAAK,CAChC,IAAIqG,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWK,IAC7B,GAAIlH,EAAK0G,EAAK9F,EAAIsG,KAAOlH,EAAKoG,EAAKc,GAAI,CACrCD,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAOrG,CACpB,CAGF,OAAQ,CACV,CAcA,SAASuG,EAAU9E,EAAKU,EAAQ7C,EAAQiC,GACtCjC,EAASkH,OAAOlH,IAAW,EAC3B,MAAMmH,EAAYhF,EAAIF,OAASjC,EAC1BiC,GAGHA,EAASiF,OAAOjF,IACHkF,IACXlF,EAASkF,GAJXlF,EAASkF,EAQX,MAAMC,EAASvE,EAAOZ,OAKtB,IAAIvB,EACJ,IAJIuB,EAASmF,EAAS,IACpBnF,EAASmF,EAAS,GAGf1G,EAAI,EAAGA,EAAIuB,IAAUvB,EAAG,CAC3B,MAAM2G,EAASC,SAASzE,EAAO0E,OAAW,EAAJ7G,EAAO,GAAI,IACjD,GAAI2D,EAAYgD,GAAS,OAAO3G,EAChCyB,EAAInC,EAASU,GAAK2G,CACpB,CACA,OAAO3G,CACT,CAEA,SAAS8G,EAAWrF,EAAKU,EAAQ7C,EAAQiC,GACvC,OAAOwF,EAAWtC,EAAYtC,EAAQV,EAAIF,OAASjC,GAASmC,EAAKnC,EAAQiC,EAC3E,CAEA,SAASyF,EAAYvF,EAAKU,EAAQ7C,EAAQiC,GACxC,OAAOwF,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAIlH,EAAI,EAAGA,EAAIiH,EAAI1F,SAAUvB,EAEhCkH,EAAUC,KAAyB,IAApBF,EAAIG,WAAWpH,IAEhC,OAAOkH,CACT,CAhqCoBG,CAAalF,GAASV,EAAKnC,EAAQiC,EACvD,CAEA,SAAS+F,EAAa7F,EAAKU,EAAQ7C,EAAQiC,GACzC,OAAOwF,EAAWrC,EAAcvC,GAASV,EAAKnC,EAAQiC,EACxD,CAEA,SAASgG,EAAW9F,EAAKU,EAAQ7C,EAAQiC,GACvC,OAAOwF,EA0pCT,SAAyBE,EAAKO,GAC5B,IAAI/G,EAAGgH,EAAIC,EACX,MAAMR,EAAY,GAClB,IAAK,IAAIlH,EAAI,EAAGA,EAAIiH,EAAI1F,WACjBiG,GAAS,GAAK,KADaxH,EAGhCS,EAAIwG,EAAIG,WAAWpH,GACnByH,EAAKhH,GAAK,EACViH,EAAKjH,EAAI,IACTyG,EAAUC,KAAKO,GACfR,EAAUC,KAAKM,GAGjB,OAAOP,CACT,CAxqCoBS,CAAexF,EAAQV,EAAIF,OAASjC,GAASmC,EAAKnC,EAAQiC,EAC9E,CA8EA,SAAS4D,EAAa1D,EAAKoD,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQrD,EAAIF,OACtBP,EAAO4G,cAAcnG,GAErBT,EAAO4G,cAAcnG,EAAIe,MAAMqC,EAAOC,GAEjD,CAEA,SAASE,EAAWvD,EAAKoD,EAAOC,GAC9BA,EAAMzE,KAAKwH,IAAIpG,EAAIF,OAAQuD,GAC3B,MAAMgD,EAAM,GAEZ,IAAI9H,EAAI6E,EACR,KAAO7E,EAAI8E,GAAK,CACd,MAAMiD,EAAYtG,EAAIzB,GACtB,IAAIgI,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI/H,EAAIiI,GAAoBnD,EAAK,CAC/B,IAAIoD,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAazG,EAAIzB,EAAI,GACO,MAAV,IAAbkI,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAazG,EAAIzB,EAAI,GACrBmI,EAAY1G,EAAIzB,EAAI,GACQ,MAAV,IAAbkI,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAazG,EAAIzB,EAAI,GACrBmI,EAAY1G,EAAIzB,EAAI,GACpBoI,EAAa3G,EAAIzB,EAAI,GACO,MAAV,IAAbkI,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAIX,KAAKa,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAIX,KAAKa,GACThI,GAAKiI,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAM9E,EAAM8E,EAAW/G,OACvB,GAAIiC,GAAO+E,EACT,OAAOrC,OAAOsC,aAAaC,MAAMvC,OAAQoC,GAI3C,IAAIR,EAAM,GACN9H,EAAI,EACR,KAAOA,EAAIwD,GACTsE,GAAO5B,OAAOsC,aAAaC,MACzBvC,OACAoC,EAAW9F,MAAMxC,EAAGA,GAAKuI,IAG7B,OAAOT,CACT,CAxBSY,CAAsBZ,EAC/B,CA39BA1G,EAAOuH,oBAUP,WAEE,IACE,MAAM7C,EAAM,IAAIpE,WAAW,GACrBkH,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFAlH,OAAOC,eAAegH,EAAOlH,WAAWG,WACxCF,OAAOC,eAAekE,EAAK8C,GACN,KAAd9C,EAAI+C,KACb,CAAE,MAAOnJ,GACP,OAAO,CACT,CACF,CArB6BoJ,GAExB1H,EAAOuH,qBAA0C,oBAAZI,SACb,mBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJrH,OAAOsH,eAAe7H,EAAOS,UAAW,SAAU,CAChDqH,YAAY,EACZC,IAAK,WACH,GAAK/H,EAAOmC,SAAStE,MACrB,OAAOA,KAAKI,MACd,IAGFsC,OAAOsH,eAAe7H,EAAOS,UAAW,SAAU,CAChDqH,YAAY,EACZC,IAAK,WACH,GAAK/H,EAAOmC,SAAStE,MACrB,OAAOA,KAAK+D,UACd,IAoCF5B,EAAOgI,SAAW,KA8DlBhI,EAAOc,KAAO,SAAU1B,EAAOuB,EAAkBR,GAC/C,OAAOW,EAAK1B,EAAOuB,EAAkBR,EACvC,EAIAI,OAAOC,eAAeR,EAAOS,UAAWH,WAAWG,WACnDF,OAAOC,eAAeR,EAAQM,YA8B9BN,EAAOiI,MAAQ,SAAUlF,EAAMmF,EAAMlH,GACnC,OArBF,SAAgB+B,EAAMmF,EAAMlH,GAE1B,OADA8B,EAAWC,GACPA,GAAQ,EACH7C,EAAa6C,QAETT,IAAT4F,EAIyB,iBAAblH,EACVd,EAAa6C,GAAMmF,KAAKA,EAAMlH,GAC9Bd,EAAa6C,GAAMmF,KAAKA,GAEvBhI,EAAa6C,EACtB,CAOSkF,CAAMlF,EAAMmF,EAAMlH,EAC3B,EAUAhB,EAAOa,YAAc,SAAUkC,GAC7B,OAAOlC,EAAYkC,EACrB,EAIA/C,EAAOmI,gBAAkB,SAAUpF,GACjC,OAAOlC,EAAYkC,EACrB,EA6GA/C,EAAOmC,SAAW,SAAmBF,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEmG,WACpBnG,IAAMjC,EAAOS,SACjB,EAEAT,EAAOqI,QAAU,SAAkBC,EAAGrG,GAGpC,GAFIR,EAAW6G,EAAGhI,cAAagI,EAAItI,EAAOc,KAAKwH,EAAGA,EAAEpK,OAAQoK,EAAEpH,aAC1DO,EAAWQ,EAAG3B,cAAa2B,EAAIjC,EAAOc,KAAKmB,EAAGA,EAAE/D,OAAQ+D,EAAEf,cACzDlB,EAAOmC,SAASmG,KAAOtI,EAAOmC,SAASF,GAC1C,MAAM,IAAIrB,UACR,yEAIJ,GAAI0H,IAAMrG,EAAG,OAAO,EAEpB,IAAIsG,EAAID,EAAEnI,OACNqI,EAAIvG,EAAE9B,OAEV,IAAK,IAAIvB,EAAI,EAAGwD,EAAMnD,KAAKwH,IAAI8B,EAAGC,GAAI5J,EAAIwD,IAAOxD,EAC/C,GAAI0J,EAAE1J,KAAOqD,EAAErD,GAAI,CACjB2J,EAAID,EAAE1J,GACN4J,EAAIvG,EAAErD,GACN,KACF,CAGF,OAAI2J,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEAvI,EAAOiB,WAAa,SAAqBD,GACvC,OAAQ8D,OAAO9D,GAAUuC,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEAvD,EAAOyI,OAAS,SAAiBC,EAAMvI,GACrC,IAAKsC,MAAMC,QAAQgG,GACjB,MAAM,IAAI9H,UAAU,+CAGtB,GAAoB,IAAhB8H,EAAKvI,OACP,OAAOH,EAAOiI,MAAM,GAGtB,IAAIrJ,EACJ,QAAe0D,IAAXnC,EAEF,IADAA,EAAS,EACJvB,EAAI,EAAGA,EAAI8J,EAAKvI,SAAUvB,EAC7BuB,GAAUuI,EAAK9J,GAAGuB,OAItB,MAAMlC,EAAS+B,EAAOa,YAAYV,GAClC,IAAIwI,EAAM,EACV,IAAK/J,EAAI,EAAGA,EAAI8J,EAAKvI,SAAUvB,EAAG,CAChC,IAAIyB,EAAMqI,EAAK9J,GACf,GAAI6C,EAAWpB,EAAKC,YACdqI,EAAMtI,EAAIF,OAASlC,EAAOkC,QACvBH,EAAOmC,SAAS9B,KAAMA,EAAML,EAAOc,KAAKT,IAC7CA,EAAIqB,KAAKzD,EAAQ0K,IAEjBrI,WAAWG,UAAUmI,IAAIpE,KACvBvG,EACAoC,EACAsI,OAGC,KAAK3I,EAAOmC,SAAS9B,GAC1B,MAAM,IAAIO,UAAU,+CAEpBP,EAAIqB,KAAKzD,EAAQ0K,EACnB,CACAA,GAAOtI,EAAIF,MACb,CACA,OAAOlC,CACT,EAiDA+B,EAAOkB,WAAaA,EA8EpBlB,EAAOS,UAAU2H,WAAY,EAQ7BpI,EAAOS,UAAUoI,OAAS,WACxB,MAAMzG,EAAMvE,KAAKsC,OACjB,GAAIiC,EAAM,GAAM,EACd,MAAM,IAAIhC,WAAW,6CAEvB,IAAK,IAAIxB,EAAI,EAAGA,EAAIwD,EAAKxD,GAAK,EAC5BqF,EAAKpG,KAAMe,EAAGA,EAAI,GAEpB,OAAOf,IACT,EAEAmC,EAAOS,UAAUqI,OAAS,WACxB,MAAM1G,EAAMvE,KAAKsC,OACjB,GAAIiC,EAAM,GAAM,EACd,MAAM,IAAIhC,WAAW,6CAEvB,IAAK,IAAIxB,EAAI,EAAGA,EAAIwD,EAAKxD,GAAK,EAC5BqF,EAAKpG,KAAMe,EAAGA,EAAI,GAClBqF,EAAKpG,KAAMe,EAAI,EAAGA,EAAI,GAExB,OAAOf,IACT,EAEAmC,EAAOS,UAAUsI,OAAS,WACxB,MAAM3G,EAAMvE,KAAKsC,OACjB,GAAIiC,EAAM,GAAM,EACd,MAAM,IAAIhC,WAAW,6CAEvB,IAAK,IAAIxB,EAAI,EAAGA,EAAIwD,EAAKxD,GAAK,EAC5BqF,EAAKpG,KAAMe,EAAGA,EAAI,GAClBqF,EAAKpG,KAAMe,EAAI,EAAGA,EAAI,GACtBqF,EAAKpG,KAAMe,EAAI,EAAGA,EAAI,GACtBqF,EAAKpG,KAAMe,EAAI,EAAGA,EAAI,GAExB,OAAOf,IACT,EAEAmC,EAAOS,UAAUwC,SAAW,WAC1B,MAAM9C,EAAStC,KAAKsC,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBgD,UAAUhD,OAAqByD,EAAU/F,KAAM,EAAGsC,GAC/CqD,EAAa6D,MAAMxJ,KAAMsF,UAClC,EAEAnD,EAAOS,UAAUuI,eAAiBhJ,EAAOS,UAAUwC,SAEnDjD,EAAOS,UAAUwI,OAAS,SAAiBhH,GACzC,IAAKjC,EAAOmC,SAASF,GAAI,MAAM,IAAIrB,UAAU,6BAC7C,OAAI/C,OAASoE,GACsB,IAA5BjC,EAAOqI,QAAQxK,KAAMoE,EAC9B,EAEAjC,EAAOS,UAAUyI,QAAU,WACzB,IAAIrD,EAAM,GACV,MAAMsD,EAAM3L,EAAQ,GAGpB,OAFAqI,EAAMhI,KAAKoF,SAAS,MAAO,EAAGkG,GAAKC,QAAQ,UAAW,OAAOC,OACzDxL,KAAKsC,OAASgJ,IAAKtD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACI/F,IACFE,EAAOS,UAAUX,GAAuBE,EAAOS,UAAUyI,SAG3DlJ,EAAOS,UAAU4H,QAAU,SAAkBiB,EAAQ7F,EAAOC,EAAK6F,EAAWC,GAI1E,GAHI/H,EAAW6H,EAAQhJ,cACrBgJ,EAAStJ,EAAOc,KAAKwI,EAAQA,EAAOpL,OAAQoL,EAAOpI,cAEhDlB,EAAOmC,SAASmH,GACnB,MAAM,IAAI1I,UACR,wFAC2B0I,GAiB/B,QAbchH,IAAVmB,IACFA,EAAQ,QAEEnB,IAARoB,IACFA,EAAM4F,EAASA,EAAOnJ,OAAS,QAEfmC,IAAdiH,IACFA,EAAY,QAEEjH,IAAZkH,IACFA,EAAU3L,KAAKsC,QAGbsD,EAAQ,GAAKC,EAAM4F,EAAOnJ,QAAUoJ,EAAY,GAAKC,EAAU3L,KAAKsC,OACtE,MAAM,IAAIC,WAAW,sBAGvB,GAAImJ,GAAaC,GAAW/F,GAASC,EACnC,OAAO,EAET,GAAI6F,GAAaC,EACf,OAAQ,EAEV,GAAI/F,GAASC,EACX,OAAO,EAQT,GAAI7F,OAASyL,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJ9E,KAAS,IADTD,KAAW,GASX,MAAMrB,EAAMnD,KAAKwH,IAAI8B,EAAGC,GAElBiB,EAAW5L,KAAKuD,MAAMmI,EAAWC,GACjCE,EAAaJ,EAAOlI,MAAMqC,EAAOC,GAEvC,IAAK,IAAI9E,EAAI,EAAGA,EAAIwD,IAAOxD,EACzB,GAAI6K,EAAS7K,KAAO8K,EAAW9K,GAAI,CACjC2J,EAAIkB,EAAS7K,GACb4J,EAAIkB,EAAW9K,GACf,KACF,CAGF,OAAI2J,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HAvI,EAAOS,UAAUkJ,SAAW,SAAmBvF,EAAKxC,EAAYZ,GAC9D,OAAoD,IAA7CnD,KAAK0G,QAAQH,EAAKxC,EAAYZ,EACvC,EAEAhB,EAAOS,UAAU8D,QAAU,SAAkBH,EAAKxC,EAAYZ,GAC5D,OAAOmD,EAAqBtG,KAAMuG,EAAKxC,EAAYZ,GAAU,EAC/D,EAEAhB,EAAOS,UAAUgE,YAAc,SAAsBL,EAAKxC,EAAYZ,GACpE,OAAOmD,EAAqBtG,KAAMuG,EAAKxC,EAAYZ,GAAU,EAC/D,EA4CAhB,EAAOS,UAAUtB,MAAQ,SAAgB4B,EAAQ7C,EAAQiC,EAAQa,GAE/D,QAAesB,IAAXpE,EACF8C,EAAW,OACXb,EAAStC,KAAKsC,OACdjC,EAAS,OAEJ,QAAeoE,IAAXnC,GAA0C,iBAAXjC,EACxC8C,EAAW9C,EACXiC,EAAStC,KAAKsC,OACdjC,EAAS,MAEJ,KAAI0L,SAAS1L,GAUlB,MAAM,IAAI2L,MACR,2EAVF3L,KAAoB,EAChB0L,SAASzJ,IACXA,KAAoB,OACHmC,IAAbtB,IAAwBA,EAAW,UAEvCA,EAAWb,EACXA,OAASmC,EAMb,CAEA,MAAM+C,EAAYxH,KAAKsC,OAASjC,EAGhC,SAFeoE,IAAXnC,GAAwBA,EAASkF,KAAWlF,EAASkF,GAEpDtE,EAAOZ,OAAS,IAAMA,EAAS,GAAKjC,EAAS,IAAOA,EAASL,KAAKsC,OACrE,MAAM,IAAIC,WAAW,0CAGlBY,IAAUA,EAAW,QAE1B,IAAIoC,GAAc,EAClB,OACE,OAAQpC,GACN,IAAK,MACH,OAAOmE,EAAStH,KAAMkD,EAAQ7C,EAAQiC,GAExC,IAAK,OACL,IAAK,QACH,OAAOuF,EAAU7H,KAAMkD,EAAQ7C,EAAQiC,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOyF,EAAW/H,KAAMkD,EAAQ7C,EAAQiC,GAE1C,IAAK,SAEH,OAAO+F,EAAYrI,KAAMkD,EAAQ7C,EAAQiC,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOgG,EAAUtI,KAAMkD,EAAQ7C,EAAQiC,GAEzC,QACE,GAAIiD,EAAa,MAAM,IAAIxC,UAAU,qBAAuBI,GAC5DA,GAAY,GAAKA,GAAUuC,cAC3BH,GAAc,EAGtB,EAEApD,EAAOS,UAAUqJ,OAAS,WACxB,MAAO,CACLtH,KAAM,SACNG,KAAMF,MAAMhC,UAAUW,MAAMoD,KAAK3G,KAAKkM,MAAQlM,KAAM,GAExD,EAyFA,MAAMsJ,EAAuB,KAoB7B,SAAStD,EAAYxD,EAAKoD,EAAOC,GAC/B,IAAIsG,EAAM,GACVtG,EAAMzE,KAAKwH,IAAIpG,EAAIF,OAAQuD,GAE3B,IAAK,IAAI9E,EAAI6E,EAAO7E,EAAI8E,IAAO9E,EAC7BoL,GAAOlF,OAAOsC,aAAsB,IAAT/G,EAAIzB,IAEjC,OAAOoL,CACT,CAEA,SAASlG,EAAazD,EAAKoD,EAAOC,GAChC,IAAIsG,EAAM,GACVtG,EAAMzE,KAAKwH,IAAIpG,EAAIF,OAAQuD,GAE3B,IAAK,IAAI9E,EAAI6E,EAAO7E,EAAI8E,IAAO9E,EAC7BoL,GAAOlF,OAAOsC,aAAa/G,EAAIzB,IAEjC,OAAOoL,CACT,CAEA,SAASrG,EAAUtD,EAAKoD,EAAOC,GAC7B,MAAMtB,EAAM/B,EAAIF,SAEXsD,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMtB,KAAKsB,EAAMtB,GAExC,IAAI6H,EAAM,GACV,IAAK,IAAIrL,EAAI6E,EAAO7E,EAAI8E,IAAO9E,EAC7BqL,GAAOC,EAAoB7J,EAAIzB,IAEjC,OAAOqL,CACT,CAEA,SAASjG,EAAc3D,EAAKoD,EAAOC,GACjC,MAAMyG,EAAQ9J,EAAIe,MAAMqC,EAAOC,GAC/B,IAAIgD,EAAM,GAEV,IAAK,IAAI9H,EAAI,EAAGA,EAAIuL,EAAMhK,OAAS,EAAGvB,GAAK,EACzC8H,GAAO5B,OAAOsC,aAAa+C,EAAMvL,GAAqB,IAAfuL,EAAMvL,EAAI,IAEnD,OAAO8H,CACT,CAiCA,SAAS0D,EAAalM,EAAQmM,EAAKlK,GACjC,GAAKjC,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIkC,WAAW,sBAC3D,GAAIlC,EAASmM,EAAMlK,EAAQ,MAAM,IAAIC,WAAW,wCAClD,CAyQA,SAASkK,EAAUjK,EAAKjB,EAAOlB,EAAQmM,EAAKlB,EAAK1C,GAC/C,IAAKzG,EAAOmC,SAAS9B,GAAM,MAAM,IAAIO,UAAU,+CAC/C,GAAIxB,EAAQ+J,GAAO/J,EAAQqH,EAAK,MAAM,IAAIrG,WAAW,qCACrD,GAAIlC,EAASmM,EAAMhK,EAAIF,OAAQ,MAAM,IAAIC,WAAW,qBACtD,CA+FA,SAASmK,EAAgBlK,EAAKjB,EAAOlB,EAAQuI,EAAK0C,GAChDqB,EAAWpL,EAAOqH,EAAK0C,EAAK9I,EAAKnC,EAAQ,GAEzC,IAAIoI,EAAKlB,OAAOhG,EAAQqL,OAAO,aAC/BpK,EAAInC,KAAYoI,EAChBA,IAAW,EACXjG,EAAInC,KAAYoI,EAChBA,IAAW,EACXjG,EAAInC,KAAYoI,EAChBA,IAAW,EACXjG,EAAInC,KAAYoI,EAChB,IAAID,EAAKjB,OAAOhG,GAASqL,OAAO,IAAMA,OAAO,aAQ7C,OAPApK,EAAInC,KAAYmI,EAChBA,IAAW,EACXhG,EAAInC,KAAYmI,EAChBA,IAAW,EACXhG,EAAInC,KAAYmI,EAChBA,IAAW,EACXhG,EAAInC,KAAYmI,EACTnI,CACT,CAEA,SAASwM,EAAgBrK,EAAKjB,EAAOlB,EAAQuI,EAAK0C,GAChDqB,EAAWpL,EAAOqH,EAAK0C,EAAK9I,EAAKnC,EAAQ,GAEzC,IAAIoI,EAAKlB,OAAOhG,EAAQqL,OAAO,aAC/BpK,EAAInC,EAAS,GAAKoI,EAClBA,IAAW,EACXjG,EAAInC,EAAS,GAAKoI,EAClBA,IAAW,EACXjG,EAAInC,EAAS,GAAKoI,EAClBA,IAAW,EACXjG,EAAInC,EAAS,GAAKoI,EAClB,IAAID,EAAKjB,OAAOhG,GAASqL,OAAO,IAAMA,OAAO,aAQ7C,OAPApK,EAAInC,EAAS,GAAKmI,EAClBA,IAAW,EACXhG,EAAInC,EAAS,GAAKmI,EAClBA,IAAW,EACXhG,EAAInC,EAAS,GAAKmI,EAClBA,IAAW,EACXhG,EAAInC,GAAUmI,EACPnI,EAAS,CAClB,CAkHA,SAASyM,EAActK,EAAKjB,EAAOlB,EAAQmM,EAAKlB,EAAK1C,GACnD,GAAIvI,EAASmM,EAAMhK,EAAIF,OAAQ,MAAM,IAAIC,WAAW,sBACpD,GAAIlC,EAAS,EAAG,MAAM,IAAIkC,WAAW,qBACvC,CAEA,SAASwK,EAAYvK,EAAKjB,EAAOlB,EAAQ2M,EAAcC,GAOrD,OANA1L,GAASA,EACTlB,KAAoB,EACf4M,GACHH,EAAatK,EAAKjB,EAAOlB,EAAQ,GAEnC2B,EAAQV,MAAMkB,EAAKjB,EAAOlB,EAAQ2M,EAAc,GAAI,GAC7C3M,EAAS,CAClB,CAUA,SAAS6M,EAAa1K,EAAKjB,EAAOlB,EAAQ2M,EAAcC,GAOtD,OANA1L,GAASA,EACTlB,KAAoB,EACf4M,GACHH,EAAatK,EAAKjB,EAAOlB,EAAQ,GAEnC2B,EAAQV,MAAMkB,EAAKjB,EAAOlB,EAAQ2M,EAAc,GAAI,GAC7C3M,EAAS,CAClB,CAzkBA8B,EAAOS,UAAUW,MAAQ,SAAgBqC,EAAOC,GAC9C,MAAMtB,EAAMvE,KAAKsC,QACjBsD,IAAUA,GAGE,GACVA,GAASrB,GACG,IAAGqB,EAAQ,GACdA,EAAQrB,IACjBqB,EAAQrB,IANVsB,OAAcpB,IAARoB,EAAoBtB,IAAQsB,GASxB,GACRA,GAAOtB,GACG,IAAGsB,EAAM,GACVA,EAAMtB,IACfsB,EAAMtB,GAGJsB,EAAMD,IAAOC,EAAMD,GAEvB,MAAMuH,EAASnN,KAAKoN,SAASxH,EAAOC,GAIpC,OAFAnD,OAAOC,eAAewK,EAAQhL,EAAOS,WAE9BuK,CACT,EAUAhL,EAAOS,UAAUyK,WACjBlL,EAAOS,UAAU0K,WAAa,SAAqBjN,EAAQgD,EAAY4J,GACrE5M,KAAoB,EACpBgD,KAA4B,EACvB4J,GAAUV,EAAYlM,EAAQgD,EAAYrD,KAAKsC,QAEpD,IAAIiE,EAAMvG,KAAKK,GACXkN,EAAM,EACNxM,EAAI,EACR,OAASA,EAAIsC,IAAekK,GAAO,MACjChH,GAAOvG,KAAKK,EAASU,GAAKwM,EAG5B,OAAOhH,CACT,EAEApE,EAAOS,UAAU4K,WACjBrL,EAAOS,UAAU6K,WAAa,SAAqBpN,EAAQgD,EAAY4J,GACrE5M,KAAoB,EACpBgD,KAA4B,EACvB4J,GACHV,EAAYlM,EAAQgD,EAAYrD,KAAKsC,QAGvC,IAAIiE,EAAMvG,KAAKK,IAAWgD,GACtBkK,EAAM,EACV,KAAOlK,EAAa,IAAMkK,GAAO,MAC/BhH,GAAOvG,KAAKK,IAAWgD,GAAckK,EAGvC,OAAOhH,CACT,EAEApE,EAAOS,UAAU8K,UACjBvL,EAAOS,UAAU+K,UAAY,SAAoBtN,EAAQ4M,GAGvD,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACpCtC,KAAKK,EACd,EAEA8B,EAAOS,UAAUgL,aACjBzL,EAAOS,UAAUiL,aAAe,SAAuBxN,EAAQ4M,GAG7D,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACpCtC,KAAKK,GAAWL,KAAKK,EAAS,IAAM,CAC7C,EAEA8B,EAAOS,UAAUkL,aACjB3L,EAAOS,UAAUsE,aAAe,SAAuB7G,EAAQ4M,GAG7D,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACnCtC,KAAKK,IAAW,EAAKL,KAAKK,EAAS,EAC7C,EAEA8B,EAAOS,UAAUmL,aACjB5L,EAAOS,UAAUoL,aAAe,SAAuB3N,EAAQ4M,GAI7D,OAHA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,SAElCtC,KAAKK,GACTL,KAAKK,EAAS,IAAM,EACpBL,KAAKK,EAAS,IAAM,IACD,SAAnBL,KAAKK,EAAS,EACrB,EAEA8B,EAAOS,UAAUqL,aACjB9L,EAAOS,UAAUsL,aAAe,SAAuB7N,EAAQ4M,GAI7D,OAHA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QAEpB,SAAftC,KAAKK,IACTL,KAAKK,EAAS,IAAM,GACrBL,KAAKK,EAAS,IAAM,EACrBL,KAAKK,EAAS,GAClB,EAEA8B,EAAOS,UAAUuL,gBAAkBC,GAAmB,SAA0B/N,GAE9EgO,EADAhO,KAAoB,EACG,UACvB,MAAMiO,EAAQtO,KAAKK,GACbkO,EAAOvO,KAAKK,EAAS,QACboE,IAAV6J,QAAgC7J,IAAT8J,GACzBC,EAAYnO,EAAQL,KAAKsC,OAAS,GAGpC,MAAMmG,EAAK6F,EACQ,IAAjBtO,OAAOK,GACU,MAAjBL,OAAOK,GACPL,OAAOK,GAAU,GAAK,GAElBmI,EAAKxI,OAAOK,GACC,IAAjBL,OAAOK,GACU,MAAjBL,OAAOK,GACPkO,EAAO,GAAK,GAEd,OAAO3B,OAAOnE,IAAOmE,OAAOpE,IAAOoE,OAAO,IAC5C,IAEAzK,EAAOS,UAAU6L,gBAAkBL,GAAmB,SAA0B/N,GAE9EgO,EADAhO,KAAoB,EACG,UACvB,MAAMiO,EAAQtO,KAAKK,GACbkO,EAAOvO,KAAKK,EAAS,QACboE,IAAV6J,QAAgC7J,IAAT8J,GACzBC,EAAYnO,EAAQL,KAAKsC,OAAS,GAGpC,MAAMkG,EAAK8F,EAAQ,GAAK,GACL,MAAjBtO,OAAOK,GACU,IAAjBL,OAAOK,GACPL,OAAOK,GAEHoI,EAAKzI,OAAOK,GAAU,GAAK,GACd,MAAjBL,OAAOK,GACU,IAAjBL,OAAOK,GACPkO,EAEF,OAAQ3B,OAAOpE,IAAOoE,OAAO,KAAOA,OAAOnE,EAC7C,IAEAtG,EAAOS,UAAU8L,UAAY,SAAoBrO,EAAQgD,EAAY4J,GACnE5M,KAAoB,EACpBgD,KAA4B,EACvB4J,GAAUV,EAAYlM,EAAQgD,EAAYrD,KAAKsC,QAEpD,IAAIiE,EAAMvG,KAAKK,GACXkN,EAAM,EACNxM,EAAI,EACR,OAASA,EAAIsC,IAAekK,GAAO,MACjChH,GAAOvG,KAAKK,EAASU,GAAKwM,EAM5B,OAJAA,GAAO,IAEHhH,GAAOgH,IAAKhH,GAAOnF,KAAKC,IAAI,EAAG,EAAIgC,IAEhCkD,CACT,EAEApE,EAAOS,UAAU+L,UAAY,SAAoBtO,EAAQgD,EAAY4J,GACnE5M,KAAoB,EACpBgD,KAA4B,EACvB4J,GAAUV,EAAYlM,EAAQgD,EAAYrD,KAAKsC,QAEpD,IAAIvB,EAAIsC,EACJkK,EAAM,EACNhH,EAAMvG,KAAKK,IAAWU,GAC1B,KAAOA,EAAI,IAAMwM,GAAO,MACtBhH,GAAOvG,KAAKK,IAAWU,GAAKwM,EAM9B,OAJAA,GAAO,IAEHhH,GAAOgH,IAAKhH,GAAOnF,KAAKC,IAAI,EAAG,EAAIgC,IAEhCkD,CACT,EAEApE,EAAOS,UAAUgM,SAAW,SAAmBvO,EAAQ4M,GAGrD,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACtB,IAAftC,KAAKK,IAC0B,GAA5B,IAAOL,KAAKK,GAAU,GADKL,KAAKK,EAE3C,EAEA8B,EAAOS,UAAUiM,YAAc,SAAsBxO,EAAQ4M,GAC3D5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QAC3C,MAAMiE,EAAMvG,KAAKK,GAAWL,KAAKK,EAAS,IAAM,EAChD,OAAc,MAANkG,EAAsB,WAANA,EAAmBA,CAC7C,EAEApE,EAAOS,UAAUkM,YAAc,SAAsBzO,EAAQ4M,GAC3D5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QAC3C,MAAMiE,EAAMvG,KAAKK,EAAS,GAAML,KAAKK,IAAW,EAChD,OAAc,MAANkG,EAAsB,WAANA,EAAmBA,CAC7C,EAEApE,EAAOS,UAAUmM,YAAc,SAAsB1O,EAAQ4M,GAI3D,OAHA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QAEnCtC,KAAKK,GACVL,KAAKK,EAAS,IAAM,EACpBL,KAAKK,EAAS,IAAM,GACpBL,KAAKK,EAAS,IAAM,EACzB,EAEA8B,EAAOS,UAAUoM,YAAc,SAAsB3O,EAAQ4M,GAI3D,OAHA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QAEnCtC,KAAKK,IAAW,GACrBL,KAAKK,EAAS,IAAM,GACpBL,KAAKK,EAAS,IAAM,EACpBL,KAAKK,EAAS,EACnB,EAEA8B,EAAOS,UAAUqM,eAAiBb,GAAmB,SAAyB/N,GAE5EgO,EADAhO,KAAoB,EACG,UACvB,MAAMiO,EAAQtO,KAAKK,GACbkO,EAAOvO,KAAKK,EAAS,QACboE,IAAV6J,QAAgC7J,IAAT8J,GACzBC,EAAYnO,EAAQL,KAAKsC,OAAS,GAGpC,MAAMiE,EAAMvG,KAAKK,EAAS,GACL,IAAnBL,KAAKK,EAAS,GACK,MAAnBL,KAAKK,EAAS,IACbkO,GAAQ,IAEX,OAAQ3B,OAAOrG,IAAQqG,OAAO,KAC5BA,OAAO0B,EACU,IAAjBtO,OAAOK,GACU,MAAjBL,OAAOK,GACPL,OAAOK,GAAU,GAAK,GAC1B,IAEA8B,EAAOS,UAAUsM,eAAiBd,GAAmB,SAAyB/N,GAE5EgO,EADAhO,KAAoB,EACG,UACvB,MAAMiO,EAAQtO,KAAKK,GACbkO,EAAOvO,KAAKK,EAAS,QACboE,IAAV6J,QAAgC7J,IAAT8J,GACzBC,EAAYnO,EAAQL,KAAKsC,OAAS,GAGpC,MAAMiE,GAAO+H,GAAS,IACH,MAAjBtO,OAAOK,GACU,IAAjBL,OAAOK,GACPL,OAAOK,GAET,OAAQuM,OAAOrG,IAAQqG,OAAO,KAC5BA,OAAO5M,OAAOK,GAAU,GAAK,GACZ,MAAjBL,OAAOK,GACU,IAAjBL,OAAOK,GACPkO,EACJ,IAEApM,EAAOS,UAAUuM,YAAc,SAAsB9O,EAAQ4M,GAG3D,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACpCN,EAAQ7B,KAAKH,KAAMK,GAAQ,EAAM,GAAI,EAC9C,EAEA8B,EAAOS,UAAUwM,YAAc,SAAsB/O,EAAQ4M,GAG3D,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACpCN,EAAQ7B,KAAKH,KAAMK,GAAQ,EAAO,GAAI,EAC/C,EAEA8B,EAAOS,UAAUyM,aAAe,SAAuBhP,EAAQ4M,GAG7D,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACpCN,EAAQ7B,KAAKH,KAAMK,GAAQ,EAAM,GAAI,EAC9C,EAEA8B,EAAOS,UAAU0M,aAAe,SAAuBjP,EAAQ4M,GAG7D,OAFA5M,KAAoB,EACf4M,GAAUV,EAAYlM,EAAQ,EAAGL,KAAKsC,QACpCN,EAAQ7B,KAAKH,KAAMK,GAAQ,EAAO,GAAI,EAC/C,EAQA8B,EAAOS,UAAU2M,YACjBpN,EAAOS,UAAU4M,YAAc,SAAsBjO,EAAOlB,EAAQgD,EAAY4J,GAC9E1L,GAASA,EACTlB,KAAoB,EACpBgD,KAA4B,EACvB4J,GAEHR,EAASzM,KAAMuB,EAAOlB,EAAQgD,EADbjC,KAAKC,IAAI,EAAG,EAAIgC,GAAc,EACK,GAGtD,IAAIkK,EAAM,EACNxM,EAAI,EAER,IADAf,KAAKK,GAAkB,IAARkB,IACNR,EAAIsC,IAAekK,GAAO,MACjCvN,KAAKK,EAASU,GAAMQ,EAAQgM,EAAO,IAGrC,OAAOlN,EAASgD,CAClB,EAEAlB,EAAOS,UAAU6M,YACjBtN,EAAOS,UAAU8M,YAAc,SAAsBnO,EAAOlB,EAAQgD,EAAY4J,GAC9E1L,GAASA,EACTlB,KAAoB,EACpBgD,KAA4B,EACvB4J,GAEHR,EAASzM,KAAMuB,EAAOlB,EAAQgD,EADbjC,KAAKC,IAAI,EAAG,EAAIgC,GAAc,EACK,GAGtD,IAAItC,EAAIsC,EAAa,EACjBkK,EAAM,EAEV,IADAvN,KAAKK,EAASU,GAAa,IAARQ,IACVR,GAAK,IAAMwM,GAAO,MACzBvN,KAAKK,EAASU,GAAMQ,EAAQgM,EAAO,IAGrC,OAAOlN,EAASgD,CAClB,EAEAlB,EAAOS,UAAU+M,WACjBxN,EAAOS,UAAUgN,WAAa,SAAqBrO,EAAOlB,EAAQ4M,GAKhE,OAJA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,IAAM,GACtDL,KAAKK,GAAmB,IAARkB,EACTlB,EAAS,CAClB,EAEA8B,EAAOS,UAAUiN,cACjB1N,EAAOS,UAAUkN,cAAgB,SAAwBvO,EAAOlB,EAAQ4M,GAMtE,OALA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,MAAQ,GACxDL,KAAKK,GAAmB,IAARkB,EAChBvB,KAAKK,EAAS,GAAMkB,IAAU,EACvBlB,EAAS,CAClB,EAEA8B,EAAOS,UAAUmN,cACjB5N,EAAOS,UAAUoN,cAAgB,SAAwBzO,EAAOlB,EAAQ4M,GAMtE,OALA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,MAAQ,GACxDL,KAAKK,GAAWkB,IAAU,EAC1BvB,KAAKK,EAAS,GAAc,IAARkB,EACblB,EAAS,CAClB,EAEA8B,EAAOS,UAAUqN,cACjB9N,EAAOS,UAAUsN,cAAgB,SAAwB3O,EAAOlB,EAAQ4M,GAQtE,OAPA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,WAAY,GAC5DL,KAAKK,EAAS,GAAMkB,IAAU,GAC9BvB,KAAKK,EAAS,GAAMkB,IAAU,GAC9BvB,KAAKK,EAAS,GAAMkB,IAAU,EAC9BvB,KAAKK,GAAmB,IAARkB,EACTlB,EAAS,CAClB,EAEA8B,EAAOS,UAAUuN,cACjBhO,EAAOS,UAAUwN,cAAgB,SAAwB7O,EAAOlB,EAAQ4M,GAQtE,OAPA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,WAAY,GAC5DL,KAAKK,GAAWkB,IAAU,GAC1BvB,KAAKK,EAAS,GAAMkB,IAAU,GAC9BvB,KAAKK,EAAS,GAAMkB,IAAU,EAC9BvB,KAAKK,EAAS,GAAc,IAARkB,EACblB,EAAS,CAClB,EA8CA8B,EAAOS,UAAUyN,iBAAmBjC,GAAmB,SAA2B7M,EAAOlB,EAAS,GAChG,OAAOqM,EAAe1M,KAAMuB,EAAOlB,EAAQuM,OAAO,GAAIA,OAAO,sBAC/D,IAEAzK,EAAOS,UAAU0N,iBAAmBlC,GAAmB,SAA2B7M,EAAOlB,EAAS,GAChG,OAAOwM,EAAe7M,KAAMuB,EAAOlB,EAAQuM,OAAO,GAAIA,OAAO,sBAC/D,IAEAzK,EAAOS,UAAU2N,WAAa,SAAqBhP,EAAOlB,EAAQgD,EAAY4J,GAG5E,GAFA1L,GAASA,EACTlB,KAAoB,GACf4M,EAAU,CACb,MAAMuD,EAAQpP,KAAKC,IAAI,EAAI,EAAIgC,EAAc,GAE7CoJ,EAASzM,KAAMuB,EAAOlB,EAAQgD,EAAYmN,EAAQ,GAAIA,EACxD,CAEA,IAAIzP,EAAI,EACJwM,EAAM,EACNkD,EAAM,EAEV,IADAzQ,KAAKK,GAAkB,IAARkB,IACNR,EAAIsC,IAAekK,GAAO,MAC7BhM,EAAQ,GAAa,IAARkP,GAAsC,IAAzBzQ,KAAKK,EAASU,EAAI,KAC9C0P,EAAM,GAERzQ,KAAKK,EAASU,IAAOQ,EAAQgM,EAAQ,GAAKkD,EAAM,IAGlD,OAAOpQ,EAASgD,CAClB,EAEAlB,EAAOS,UAAU8N,WAAa,SAAqBnP,EAAOlB,EAAQgD,EAAY4J,GAG5E,GAFA1L,GAASA,EACTlB,KAAoB,GACf4M,EAAU,CACb,MAAMuD,EAAQpP,KAAKC,IAAI,EAAI,EAAIgC,EAAc,GAE7CoJ,EAASzM,KAAMuB,EAAOlB,EAAQgD,EAAYmN,EAAQ,GAAIA,EACxD,CAEA,IAAIzP,EAAIsC,EAAa,EACjBkK,EAAM,EACNkD,EAAM,EAEV,IADAzQ,KAAKK,EAASU,GAAa,IAARQ,IACVR,GAAK,IAAMwM,GAAO,MACrBhM,EAAQ,GAAa,IAARkP,GAAsC,IAAzBzQ,KAAKK,EAASU,EAAI,KAC9C0P,EAAM,GAERzQ,KAAKK,EAASU,IAAOQ,EAAQgM,EAAQ,GAAKkD,EAAM,IAGlD,OAAOpQ,EAASgD,CAClB,EAEAlB,EAAOS,UAAU+N,UAAY,SAAoBpP,EAAOlB,EAAQ4M,GAM9D,OALA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,KAAO,KACnDkB,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCvB,KAAKK,GAAmB,IAARkB,EACTlB,EAAS,CAClB,EAEA8B,EAAOS,UAAUgO,aAAe,SAAuBrP,EAAOlB,EAAQ4M,GAMpE,OALA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,OAAS,OACzDL,KAAKK,GAAmB,IAARkB,EAChBvB,KAAKK,EAAS,GAAMkB,IAAU,EACvBlB,EAAS,CAClB,EAEA8B,EAAOS,UAAUiO,aAAe,SAAuBtP,EAAOlB,EAAQ4M,GAMpE,OALA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,OAAS,OACzDL,KAAKK,GAAWkB,IAAU,EAC1BvB,KAAKK,EAAS,GAAc,IAARkB,EACblB,EAAS,CAClB,EAEA8B,EAAOS,UAAUkO,aAAe,SAAuBvP,EAAOlB,EAAQ4M,GAQpE,OAPA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,YAAa,YAC7DL,KAAKK,GAAmB,IAARkB,EAChBvB,KAAKK,EAAS,GAAMkB,IAAU,EAC9BvB,KAAKK,EAAS,GAAMkB,IAAU,GAC9BvB,KAAKK,EAAS,GAAMkB,IAAU,GACvBlB,EAAS,CAClB,EAEA8B,EAAOS,UAAUmO,aAAe,SAAuBxP,EAAOlB,EAAQ4M,GASpE,OARA1L,GAASA,EACTlB,KAAoB,EACf4M,GAAUR,EAASzM,KAAMuB,EAAOlB,EAAQ,EAAG,YAAa,YACzDkB,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CvB,KAAKK,GAAWkB,IAAU,GAC1BvB,KAAKK,EAAS,GAAMkB,IAAU,GAC9BvB,KAAKK,EAAS,GAAMkB,IAAU,EAC9BvB,KAAKK,EAAS,GAAc,IAARkB,EACblB,EAAS,CAClB,EAEA8B,EAAOS,UAAUoO,gBAAkB5C,GAAmB,SAA0B7M,EAAOlB,EAAS,GAC9F,OAAOqM,EAAe1M,KAAMuB,EAAOlB,GAASuM,OAAO,sBAAuBA,OAAO,sBACnF,IAEAzK,EAAOS,UAAUqO,gBAAkB7C,GAAmB,SAA0B7M,EAAOlB,EAAS,GAC9F,OAAOwM,EAAe7M,KAAMuB,EAAOlB,GAASuM,OAAO,sBAAuBA,OAAO,sBACnF,IAiBAzK,EAAOS,UAAUsO,aAAe,SAAuB3P,EAAOlB,EAAQ4M,GACpE,OAAOF,EAAW/M,KAAMuB,EAAOlB,GAAQ,EAAM4M,EAC/C,EAEA9K,EAAOS,UAAUuO,aAAe,SAAuB5P,EAAOlB,EAAQ4M,GACpE,OAAOF,EAAW/M,KAAMuB,EAAOlB,GAAQ,EAAO4M,EAChD,EAYA9K,EAAOS,UAAUwO,cAAgB,SAAwB7P,EAAOlB,EAAQ4M,GACtE,OAAOC,EAAYlN,KAAMuB,EAAOlB,GAAQ,EAAM4M,EAChD,EAEA9K,EAAOS,UAAUyO,cAAgB,SAAwB9P,EAAOlB,EAAQ4M,GACtE,OAAOC,EAAYlN,KAAMuB,EAAOlB,GAAQ,EAAO4M,EACjD,EAGA9K,EAAOS,UAAUiB,KAAO,SAAe4H,EAAQ6F,EAAa1L,EAAOC,GACjE,IAAK1D,EAAOmC,SAASmH,GAAS,MAAM,IAAI1I,UAAU,+BAQlD,GAPK6C,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAM7F,KAAKsC,QAC9BgP,GAAe7F,EAAOnJ,SAAQgP,EAAc7F,EAAOnJ,QAClDgP,IAAaA,EAAc,GAC5BzL,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlB6F,EAAOnJ,QAAgC,IAAhBtC,KAAKsC,OAAc,OAAO,EAGrD,GAAIgP,EAAc,EAChB,MAAM,IAAI/O,WAAW,6BAEvB,GAAIqD,EAAQ,GAAKA,GAAS5F,KAAKsC,OAAQ,MAAM,IAAIC,WAAW,sBAC5D,GAAIsD,EAAM,EAAG,MAAM,IAAItD,WAAW,2BAG9BsD,EAAM7F,KAAKsC,SAAQuD,EAAM7F,KAAKsC,QAC9BmJ,EAAOnJ,OAASgP,EAAczL,EAAMD,IACtCC,EAAM4F,EAAOnJ,OAASgP,EAAc1L,GAGtC,MAAMrB,EAAMsB,EAAMD,EAalB,OAXI5F,OAASyL,GAAqD,mBAApChJ,WAAWG,UAAU2O,WAEjDvR,KAAKuR,WAAWD,EAAa1L,EAAOC,GAEpCpD,WAAWG,UAAUmI,IAAIpE,KACvB8E,EACAzL,KAAKoN,SAASxH,EAAOC,GACrByL,GAIG/M,CACT,EAMApC,EAAOS,UAAUyH,KAAO,SAAe9D,EAAKX,EAAOC,EAAK1C,GAEtD,GAAmB,iBAARoD,EAAkB,CAS3B,GARqB,iBAAVX,GACTzC,EAAWyC,EACXA,EAAQ,EACRC,EAAM7F,KAAKsC,QACa,iBAARuD,IAChB1C,EAAW0C,EACXA,EAAM7F,KAAKsC,aAEImC,IAAbtB,GAA8C,iBAAbA,EACnC,MAAM,IAAIJ,UAAU,6BAEtB,GAAwB,iBAAbI,IAA0BhB,EAAOiB,WAAWD,GACrD,MAAM,IAAIJ,UAAU,qBAAuBI,GAE7C,GAAmB,IAAfoD,EAAIjE,OAAc,CACpB,MAAMkP,EAAOjL,EAAI4B,WAAW,IACV,SAAbhF,GAAuBqO,EAAO,KAClB,WAAbrO,KAEFoD,EAAMiL,EAEV,CACF,KAA0B,iBAARjL,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAMgB,OAAOhB,IAIf,GAAIX,EAAQ,GAAK5F,KAAKsC,OAASsD,GAAS5F,KAAKsC,OAASuD,EACpD,MAAM,IAAItD,WAAW,sBAGvB,GAAIsD,GAAOD,EACT,OAAO5F,KAQT,IAAIe,EACJ,GANA6E,KAAkB,EAClBC,OAAcpB,IAARoB,EAAoB7F,KAAKsC,OAASuD,IAAQ,EAE3CU,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKxF,EAAI6E,EAAO7E,EAAI8E,IAAO9E,EACzBf,KAAKe,GAAKwF,MAEP,CACL,MAAM+F,EAAQnK,EAAOmC,SAASiC,GAC1BA,EACApE,EAAOc,KAAKsD,EAAKpD,GACfoB,EAAM+H,EAAMhK,OAClB,GAAY,IAARiC,EACF,MAAM,IAAIxB,UAAU,cAAgBwD,EAClC,qCAEJ,IAAKxF,EAAI,EAAGA,EAAI8E,EAAMD,IAAS7E,EAC7Bf,KAAKe,EAAI6E,GAAS0G,EAAMvL,EAAIwD,EAEhC,CAEA,OAAOvE,IACT,EAMA,MAAMyR,EAAS,CAAC,EAChB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpC,WAAAC,GACEC,QAEArP,OAAOsH,eAAehK,KAAM,UAAW,CACrCuB,MAAOqQ,EAAWpI,MAAMxJ,KAAMsF,WAC9B0M,UAAU,EACVC,cAAc,IAIhBjS,KAAKkS,KAAO,GAAGlS,KAAKkS,SAASP,KAG7B3R,KAAKmS,aAEEnS,KAAKkS,IACd,CAEA,QAAIV,GACF,OAAOG,CACT,CAEA,QAAIH,CAAMjQ,GACRmB,OAAOsH,eAAehK,KAAM,OAAQ,CAClCiS,cAAc,EACdhI,YAAY,EACZ1I,QACAyQ,UAAU,GAEd,CAEA,QAAA5M,GACE,MAAO,GAAGpF,KAAKkS,SAASP,OAAS3R,KAAKoS,SACxC,EAEJ,CA+BA,SAASC,EAAuB9L,GAC9B,IAAIsC,EAAM,GACN9H,EAAIwF,EAAIjE,OACZ,MAAMsD,EAAmB,MAAXW,EAAI,GAAa,EAAI,EACnC,KAAOxF,GAAK6E,EAAQ,EAAG7E,GAAK,EAC1B8H,EAAM,IAAItC,EAAIhD,MAAMxC,EAAI,EAAGA,KAAK8H,IAElC,MAAO,GAAGtC,EAAIhD,MAAM,EAAGxC,KAAK8H,GAC9B,CAYA,SAAS8D,EAAYpL,EAAOqH,EAAK0C,EAAK9I,EAAKnC,EAAQgD,GACjD,GAAI9B,EAAQ+J,GAAO/J,EAAQqH,EAAK,CAC9B,MAAMvC,EAAmB,iBAARuC,EAAmB,IAAM,GAC1C,IAAI0J,EAWJ,MARIA,EAFAjP,EAAa,EACH,IAARuF,GAAaA,IAAQgE,OAAO,GACtB,OAAOvG,YAAYA,QAA2B,GAAlBhD,EAAa,KAASgD,IAElD,SAASA,QAA2B,GAAlBhD,EAAa,GAAS,IAAIgD,iBACtB,GAAlBhD,EAAa,GAAS,IAAIgD,IAGhC,MAAMuC,IAAMvC,YAAYiF,IAAMjF,IAElC,IAAIoL,EAAOc,iBAAiB,QAASD,EAAO/Q,EACpD,EAtBF,SAAsBiB,EAAKnC,EAAQgD,GACjCgL,EAAehO,EAAQ,eACHoE,IAAhBjC,EAAInC,SAAsDoE,IAA7BjC,EAAInC,EAASgD,IAC5CmL,EAAYnO,EAAQmC,EAAIF,QAAUe,EAAa,GAEnD,CAkBEmP,CAAYhQ,EAAKnC,EAAQgD,EAC3B,CAEA,SAASgL,EAAgB9M,EAAO2Q,GAC9B,GAAqB,iBAAV3Q,EACT,MAAM,IAAIkQ,EAAOgB,qBAAqBP,EAAM,SAAU3Q,EAE1D,CAEA,SAASiN,EAAajN,EAAOe,EAAQqC,GACnC,GAAIvD,KAAKQ,MAAML,KAAWA,EAExB,MADA8M,EAAe9M,EAAOoD,GAChB,IAAI8M,EAAOc,iBAAiB5N,GAAQ,SAAU,aAAcpD,GAGpE,GAAIe,EAAS,EACX,MAAM,IAAImP,EAAOiB,yBAGnB,MAAM,IAAIjB,EAAOc,iBAAiB5N,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAYrC,IAC7Bf,EACpC,CAvFAmQ,EAAE,4BACA,SAAUQ,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACT,GAAG3P,YACLmP,EAAE,wBACA,SAAUQ,EAAM5O,GACd,MAAO,QAAQ4O,4DAA+D5O,GAChF,GAAGP,WACL2O,EAAE,oBACA,SAAU1J,EAAKsK,EAAOK,GACpB,IAAIC,EAAM,iBAAiB5K,sBACvB6K,EAAWF,EAWf,OAVIpL,OAAOuL,UAAUH,IAAUvR,KAAKM,IAAIiR,GAAS,GAAK,GACpDE,EAAWR,EAAsBpL,OAAO0L,IACd,iBAAVA,IAChBE,EAAW5L,OAAO0L,IACdA,EAAQ/F,OAAO,IAAMA,OAAO,KAAO+F,IAAU/F,OAAO,IAAMA,OAAO,QACnEiG,EAAWR,EAAsBQ,IAEnCA,GAAY,KAEdD,GAAO,eAAeN,eAAmBO,IAClCD,CACT,GAAGrQ,YAiEL,MAAMwQ,EAAoB,oBAgB1B,SAASvN,EAAatC,EAAQqF,GAE5B,IAAIQ,EADJR,EAAQA,GAASpH,IAEjB,MAAMmB,EAASY,EAAOZ,OACtB,IAAI0Q,EAAgB,KACpB,MAAM1G,EAAQ,GAEd,IAAK,IAAIvL,EAAI,EAAGA,EAAIuB,IAAUvB,EAAG,CAI/B,GAHAgI,EAAY7F,EAAOiF,WAAWpH,GAG1BgI,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKiK,EAAe,CAElB,GAAIjK,EAAY,MAAQ,EAEjBR,GAAS,IAAM,GAAG+D,EAAMpE,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAInH,EAAI,IAAMuB,EAAQ,EAEtBiG,GAAS,IAAM,GAAG+D,EAAMpE,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA8K,EAAgBjK,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBR,GAAS,IAAM,GAAG+D,EAAMpE,KAAK,IAAM,IAAM,KAC9C8K,EAAgBjK,EAChB,QACF,CAGAA,EAAkE,OAArDiK,EAAgB,OAAU,GAAKjK,EAAY,MAC1D,MAAWiK,IAEJzK,GAAS,IAAM,GAAG+D,EAAMpE,KAAK,IAAM,IAAM,KAMhD,GAHA8K,EAAgB,KAGZjK,EAAY,IAAM,CACpB,IAAKR,GAAS,GAAK,EAAG,MACtB+D,EAAMpE,KAAKa,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKR,GAAS,GAAK,EAAG,MACtB+D,EAAMpE,KACJa,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKR,GAAS,GAAK,EAAG,MACtB+D,EAAMpE,KACJa,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIiD,MAAM,sBARhB,IAAKzD,GAAS,GAAK,EAAG,MACtB+D,EAAMpE,KACJa,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAOuD,CACT,CA2BA,SAAS7G,EAAeuC,GACtB,OAAOjG,EAAOkR,YAxHhB,SAAsBjL,GAMpB,IAFAA,GAFAA,EAAMA,EAAIkL,MAAM,KAAK,IAEX1H,OAAOD,QAAQwH,EAAmB,KAEpCzQ,OAAS,EAAG,MAAO,GAE3B,KAAO0F,EAAI1F,OAAS,GAAM,GACxB0F,GAAY,IAEd,OAAOA,CACT,CA4G4BmL,CAAYnL,GACxC,CAEA,SAASF,EAAYsL,EAAKC,EAAKhT,EAAQiC,GACrC,IAAIvB,EACJ,IAAKA,EAAI,EAAGA,EAAIuB,KACTvB,EAAIV,GAAUgT,EAAI/Q,QAAYvB,GAAKqS,EAAI9Q,UADpBvB,EAExBsS,EAAItS,EAAIV,GAAU+S,EAAIrS,GAExB,OAAOA,CACT,CAKA,SAAS6C,EAAYS,EAAKM,GACxB,OAAON,aAAeM,GACZ,MAAPN,GAAkC,MAAnBA,EAAIyN,aAA+C,MAAxBzN,EAAIyN,YAAYI,MACzD7N,EAAIyN,YAAYI,OAASvN,EAAKuN,IACpC,CACA,SAASxN,EAAaL,GAEpB,OAAOA,GAAQA,CACjB,CAIA,MAAMgI,EAAsB,WAC1B,MAAMiH,EAAW,mBACXC,EAAQ,IAAI3O,MAAM,KACxB,IAAK,IAAI7D,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMyS,EAAU,GAAJzS,EACZ,IAAK,IAAIsG,EAAI,EAAGA,EAAI,KAAMA,EACxBkM,EAAMC,EAAMnM,GAAKiM,EAASvS,GAAKuS,EAASjM,EAE5C,CACA,OAAOkM,CACR,CAV2B,GAa5B,SAASnF,EAAoBqF,GAC3B,MAAyB,oBAAX7G,OAAyB8G,EAAyBD,CAClE,CAEA,SAASC,IACP,MAAM,IAAI1H,MAAM,uBAClB,4BCvjEArM,EAAQ0D,WAuCR,SAAqBsQ,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CApU,EAAQsT,YAiDR,SAAsBU,GACpB,IAAIK,EAcAjT,EAbA6S,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvB/M,EAAM,IAAIoN,EAVhB,SAAsBN,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBG,CAAYP,EAAKG,EAAUC,IAEzCI,EAAU,EAGV5P,EAAMwP,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAK/S,EAAI,EAAGA,EAAIwD,EAAKxD,GAAK,EACxBiT,EACGI,EAAUT,EAAIxL,WAAWpH,KAAO,GAChCqT,EAAUT,EAAIxL,WAAWpH,EAAI,KAAO,GACpCqT,EAAUT,EAAIxL,WAAWpH,EAAI,KAAO,EACrCqT,EAAUT,EAAIxL,WAAWpH,EAAI,IAC/B8F,EAAIsN,KAAcH,GAAO,GAAM,IAC/BnN,EAAIsN,KAAcH,GAAO,EAAK,IAC9BnN,EAAIsN,KAAmB,IAANH,EAmBnB,OAhBwB,IAApBD,IACFC,EACGI,EAAUT,EAAIxL,WAAWpH,KAAO,EAChCqT,EAAUT,EAAIxL,WAAWpH,EAAI,KAAO,EACvC8F,EAAIsN,KAAmB,IAANH,GAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIxL,WAAWpH,KAAO,GAChCqT,EAAUT,EAAIxL,WAAWpH,EAAI,KAAO,EACpCqT,EAAUT,EAAIxL,WAAWpH,EAAI,KAAO,EACvC8F,EAAIsN,KAAcH,GAAO,EAAK,IAC9BnN,EAAIsN,KAAmB,IAANH,GAGZnN,CACT,EA5FAlH,EAAQgJ,cAkHR,SAAwB0L,GAQtB,IAPA,IAAIL,EACAzP,EAAM8P,EAAM/R,OACZgS,EAAa/P,EAAM,EACnBgQ,EAAQ,GACRC,EAAiB,MAGZzT,EAAI,EAAG0T,EAAOlQ,EAAM+P,EAAYvT,EAAI0T,EAAM1T,GAAKyT,EACtDD,EAAMrM,KAAKwM,EAAYL,EAAOtT,EAAIA,EAAIyT,EAAkBC,EAAOA,EAAQ1T,EAAIyT,IAqB7E,OAjBmB,IAAfF,GACFN,EAAMK,EAAM9P,EAAM,GAClBgQ,EAAMrM,KACJyM,EAAOX,GAAO,GACdW,EAAQX,GAAO,EAAK,IACpB,OAEsB,IAAfM,IACTN,GAAOK,EAAM9P,EAAM,IAAM,GAAK8P,EAAM9P,EAAM,GAC1CgQ,EAAMrM,KACJyM,EAAOX,GAAO,IACdW,EAAQX,GAAO,EAAK,IACpBW,EAAQX,GAAO,EAAK,IACpB,MAIGO,EAAMK,KAAK,GACpB,EA1IA,IALA,IAAID,EAAS,GACTP,EAAY,GACZH,EAA4B,oBAAfxR,WAA6BA,WAAamC,MAEvD4M,EAAO,mEACFzQ,EAAI,EAAsBA,EAAbyQ,KAAwBzQ,EAC5C4T,EAAO5T,GAAKyQ,EAAKzQ,GACjBqT,EAAU5C,EAAKrJ,WAAWpH,IAAMA,EAQlC,SAAS8S,EAASF,GAChB,IAAIpP,EAAMoP,EAAIrR,OAEd,GAAIiC,EAAM,EAAI,EACZ,MAAM,IAAIyH,MAAM,kDAKlB,IAAI8H,EAAWH,EAAIjN,QAAQ,KAO3B,OANkB,IAAdoN,IAAiBA,EAAWvP,GAMzB,CAACuP,EAJcA,IAAavP,EAC/B,EACA,EAAKuP,EAAW,EAGtB,CAmEA,SAASY,EAAaL,EAAOzO,EAAOC,GAGlC,IAFA,IAAImO,EARoBa,EASpBC,EAAS,GACJ/T,EAAI6E,EAAO7E,EAAI8E,EAAK9E,GAAK,EAChCiT,GACIK,EAAMtT,IAAM,GAAM,WAClBsT,EAAMtT,EAAI,IAAM,EAAK,QACP,IAAfsT,EAAMtT,EAAI,IACb+T,EAAO5M,KAdFyM,GADiBE,EAeMb,IAdT,GAAK,IACxBW,EAAOE,GAAO,GAAK,IACnBF,EAAOE,GAAO,EAAI,IAClBF,EAAa,GAANE,IAaT,OAAOC,EAAOF,KAAK,GACrB,CAlGAR,EAAU,IAAIjM,WAAW,IAAM,GAC/BiM,EAAU,IAAIjM,WAAW,IAAM,yBCnB/BvI,EAAOD,QAAUO,ICCb6U,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBxQ,IAAjByQ,EACH,OAAOA,EAAavV,QAGrB,IAAIC,EAASmV,EAAyBE,GAAY,CAGjDtV,QAAS,CAAC,GAOX,OAHAwV,EAAoBF,GAAUrV,EAAQA,EAAOD,QAASqV,GAG/CpV,EAAOD,OACf,CCrBAqV,EAAoB3O,EAAKzG,IACxB,IAAIwV,EAASxV,GAAUA,EAAOyV,WAC7B,IAAOzV,EAAiB,QACxB,IAAM,EAEP,OADAoV,EAAoBhU,EAAEoU,EAAQ,CAAE3K,EAAG2K,IAC5BA,CAAM,ECLdJ,EAAoBhU,EAAI,CAACrB,EAAS2V,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAE7V,EAAS4V,IAC5E7S,OAAOsH,eAAerK,EAAS4V,EAAK,CAAEtL,YAAY,EAAMC,IAAKoL,EAAWC,IAE1E,ECNDP,EAAoBQ,EAAI,CAACnR,EAAKoR,IAAU/S,OAAOE,UAAU8S,eAAe/O,KAAKtC,EAAKoR,GCClFT,EAAoBW,EAAKhW,IACH,oBAAXuC,QAA0BA,OAAO0T,aAC1ClT,OAAOsH,eAAerK,EAASuC,OAAO0T,YAAa,CAAErU,MAAO,WAE7DmB,OAAOsH,eAAerK,EAAS,aAAc,CAAE4B,OAAO,GAAO,+aCA9D,MAAMsU,EACF/D,WAAAA,GACE9R,KAAK8V,OAAS,CAEZ,MAAS,CACP5D,KAAM,aACN6D,OAAQ,QACRC,YAAa,+CACbC,SAAU,EACVC,kBAAmB,IACnBC,QAAS,sCAIf,CAOAC,QAAAA,CAASC,GAEP,OAAIrW,KAAK8V,OAAOO,GACPrW,KAAK8V,OAAOO,GAId3T,OAAO4T,OAAOtW,KAAK8V,QAAQS,MAChCC,GAASA,EAAMR,cAAgBK,KAC5B,IACP,CAOAI,QAAAA,CAASC,GACP,IAAKA,EAAUX,SAAWW,EAAUV,YAClC,MAAM,IAAIhK,MAAM,0CAYlB,OATAhM,KAAK8V,OAAOY,EAAUX,QAAU,CAC9B7D,KAAMwE,EAAUxE,MAAQwE,EAAUX,OAClCA,OAAQW,EAAUX,OAClBC,YAAaU,EAAUV,YACvBC,SAAUS,EAAUT,UAAY,EAChCC,kBAAmBQ,EAAUR,mBAAqB,IAClDC,QAASO,EAAUP,SAAW,MAGzBnW,KAAK8V,OAAOY,EAAUX,OAC/B,CAMAY,YAAAA,GACE,OAAO3W,KAAK8V,MACd,CAOAc,WAAAA,CAAYb,GACV,QAAI/V,KAAK8V,OAAOC,YACP/V,KAAK8V,OAAOC,IACZ,EAGX,oCC1EJ,MAAMc,EAAmB,IAAIC,EAAAA,UAAU,+CACjCC,EAA8B,IAAID,EAAAA,UAAU,gDAQ3CE,eAAeC,EAA2BC,EAAOC,GACtD,OAAOL,EAAAA,UAAUM,uBACf,CACEF,EAAMG,WACNR,EAAiBQ,WACjBF,EAAKE,YAEPN,GACA,EACJ,CASO,SAASO,EAAwCC,EAAOL,EAAOC,GACpE,OAAO,IAAIK,EAAAA,uBAAuB,CAChCC,KAAM,CACJ,CAAEC,OAAQH,EAAOI,UAAU,EAAMC,YAAY,GAC7C,CAAEF,OAAQT,EAA2BC,EAAOC,GAAOQ,UAAU,EAAOC,YAAY,GAChF,CAAEF,OAAQR,EAAOS,UAAU,EAAOC,YAAY,GAC9C,CAAEF,OAAQP,EAAMQ,UAAU,EAAOC,YAAY,GAC7C,CAAEF,OAAQG,EAAAA,cAAcC,UAAWH,UAAU,EAAOC,YAAY,GAChE,CAAEF,OAAQb,EAAkBc,UAAU,EAAOC,YAAY,GACzD,CAAEF,OAAQX,EAA6BY,UAAU,EAAOC,YAAY,IAEtEE,UAAWf,EACXjS,KAAM3C,EAAOc,KAAK,KAEtB,CAUO,SAAS8U,EAA0BC,EAAQC,EAAaf,EAAOgB,GACpE,OAAO,IAAIV,EAAAA,uBAAuB,CAChCC,KAAM,CACJ,CAAEC,OAAQM,EAAQL,UAAU,EAAOC,YAAY,GAC/C,CAAEF,OAAQO,EAAaN,UAAU,EAAOC,YAAY,GACpD,CAAEF,OAAQR,EAAOS,UAAU,EAAMC,YAAY,IAE/CE,UAAWjB,EACX/R,KAAM3C,EAAOc,KAAK,CAAC,KAAM,IAAIkV,IAAJ,CAAOD,GAAQE,QAAQ,KAAM,MAE1D,CC1DO,SAASC,EAAqBC,GACnC,IAEE,OADA,IAAIxB,EAAAA,UAAUwB,IACP,CACT,CAAE,MACA,OAAO,CACT,CACF,CAUO,SAASC,EAAsBC,EAAQ9B,GAC5C,MAAM,UAAE+B,EAAS,OAAEP,GAAWM,EAE9B,OAAKC,GAAcJ,EAAqBI,GAOnC/B,EAOD/U,MAAMuW,IAAWA,GAAU,EACtB,CACLQ,SAAS,EACT3O,MAAO,iCAIP2M,EAAUR,mBAAqBgC,EAASxB,EAAUR,kBAC7C,CACLwC,SAAS,EACT3O,MAAO,6CAA6C2M,EAAUR,qBAAqBQ,EAAUX,UAI1F,CACL2C,SAAS,EACT3O,MAAO,MAtBA,CACL2O,SAAS,EACT3O,MAAO,iBATF,CACL2O,SAAS,EACT3O,MAAO,4BA6Bb,CCnDA,MAAM4O,EAKJ7G,WAAAA,GAAyB,IAAb8G,EAAMtT,UAAAhD,OAAA,QAAAmC,IAAAa,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpBtF,KAAK4Y,OAAS,CACZC,QAASD,EAAOC,SAAW,eAC3BC,YAAaF,EAAOE,aAAe,KACnCC,WAAYH,EAAOG,YAAc,YACjCC,mBAAoBJ,EAAOI,oBAAsB,GACjDC,mBAAoBL,EAAOK,oBAAsB,IACjDC,cAAeN,EAAOM,eAAiB,KACpCN,GAGL5Y,KAAKmZ,OAAS,KACdnZ,KAAKoZ,WAAa,KAClBpZ,KAAKqZ,cAAgB,KACrBrZ,KAAKsZ,cAAgB,IAAIzD,EACzB7V,KAAKuZ,aAAc,CACrB,CAMA,UAAMC,GACJ,IACE,OAAIxZ,KAAKuZ,cAETzP,QAAQjI,IAAI,qCAGP7B,KAAK4Y,OAAOE,cACf9Y,KAAK4Y,OAAOE,YAAc,wEAI5B9Y,KAAKoZ,WAAa,IAAIK,EAAAA,WAAWzZ,KAAK4Y,OAAOE,YAAa,CACxDC,WAAY/Y,KAAK4Y,OAAOG,WACxBW,WAAY1Z,KAAK4Y,OAAOE,YAAYvN,QAAQ,QAAS,OACrDoO,iCAAkC,OAGpC3Z,KAAKuZ,aAAc,IAhBU,CAkB/B,CAAE,MAAOxP,GAEP,MADAD,QAAQC,MAAM,0CAA2CA,GACnDA,CACR,CACF,CAMA6P,gBAAAA,CAAiBC,GACf7Z,KAAKqZ,cAAgBQ,CACvB,CAOA,mBAAMC,GAA4B,IAAdC,EAAOzU,UAAAhD,OAAA,QAAAmC,IAAAa,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7B,IAGE,SAFMtF,KAAKwZ,QAENxZ,KAAKqZ,cACR,MAAM,IAAIrN,MAAM,yDAGlB,MAAMgO,QAAsBha,KAAKqZ,cAAcY,QAAQF,GAEvD,OADA/Z,KAAKmZ,OAASa,EACPA,CACT,CAAE,MAAOjQ,GAEP,MADAD,QAAQC,MAAM,2BAA4BA,GACpCA,CACR,CACF,CAMA,sBAAMmQ,GACJ,IACE,IAAKla,KAAKqZ,cACR,MAAM,IAAIrN,MAAM,yBAKlB,aAFMhM,KAAKqZ,cAAcc,aACzBna,KAAKmZ,OAAS,MACP,CACT,CAAE,MAAOpP,GAEP,MADAD,QAAQC,MAAM,8BAA+BA,GACvCA,CACR,CACF,CAOA,qBAAMqQ,CAAgB/D,GACpB,IACE,IAAKrW,KAAKmZ,OAAQ,MAAM,IAAInN,MAAM,wBAElC,MAAM0K,EAAY1W,KAAKsZ,cAAclD,SAASC,GAC9C,IAAKK,EAAW,MAAM,IAAI1K,MAAM,kBAAkBqK,KAElD,aAAarW,KAAKqZ,cAAce,gBAC9Bpa,KAAKoZ,WACLpZ,KAAKmZ,OAAOkB,UACZ3D,EAAUV,YAEd,CAAE,MAAOjM,GAEP,MADAD,QAAQC,MAAM,+BAAgCA,GACxCA,CACR,CACF,CAWA,gBAAMuQ,CAAW9B,GACf,IACE,MAAM,UAAEC,EAAS,OAAEP,EAAM,UAAEqC,EAAS,KAAEC,GAAShC,EAE/C,IAAKxY,KAAKmZ,OAAQ,MAAM,IAAInN,MAAM,wBAClC,IAAKhM,KAAKqZ,cAAe,MAAM,IAAIrN,MAAM,yBAGzC,IAAKyM,IAAcJ,EAAqBI,GACtC,MAAM,IAAIzM,MAAM,6BAGlB,MAAM0K,EAAY1W,KAAKsZ,cAAclD,SAASmE,GAC9C,IAAK7D,EAAW,MAAM,IAAI1K,MAAM,kBAAkBuO,KAElD,GAAI5Y,MAAMuW,IAAWA,GAAU,GAAKA,EAASxB,EAAUR,kBACrD,MAAM,IAAIlK,MAAM,gCAAgC0K,EAAUR,qBAAqBQ,EAAUX,UAI3F,MAAM0E,QAAoBza,KAAK0a,+BAA+B,CAC5DjC,YACAP,SACAqC,YACAC,SAIIG,QAAmB3a,KAAKoZ,WAAWwB,oBAAoBH,GAC7D,GAAIE,EAAWpZ,MAAMsZ,IACnB,MAAM,IAAI7O,MAAM,kCAAkC8O,KAAKC,UAAUJ,EAAWpZ,MAAMsZ,QAIpF,MAAMG,QAAkBhb,KAAKqZ,cAAc4B,uBAAuBR,GAKlE,MAAO,CACLO,YACAE,mBAJyBlb,KAAKmb,oBAAoBH,GAKlDI,YAAa,yBAAyBJ,IAE1C,CAAE,MAAOjR,GAEP,MADAD,QAAQC,MAAM,iBAAkBA,GAC1BA,CACR,CACF,CAQA,oCAAM2Q,CAA+BlC,GACnC,MAAM,UAAEC,EAAS,OAAEP,EAAM,UAAEqC,EAAS,KAAEC,GAAShC,EAEzC6C,EAAkB,IAAIvE,EAAAA,UAAU2B,GAChC/B,EAAY1W,KAAKsZ,cAAclD,SAASmE,GACxCe,EAAa,IAAIxE,EAAAA,UAAUJ,EAAUV,aAGrCuF,EAAiBna,KAAKQ,MAAMsW,EAAS9W,KAAKC,IAAI,GAAIqV,EAAUT,WAG5DuF,QAA2BvE,EAC/BjX,KAAKmZ,OAAOkB,UACZiB,GAGIG,QAA8BxE,EAClCoE,EACAC,GAIF,IAAIb,EAAc,IAAIiB,EAAAA,kBAGa1b,KAAKoZ,WAAWuC,eAAeF,IAEhEhB,EAAYmB,IACVtE,EACEtX,KAAKmZ,OAAOkB,UACZgB,EACAC,IAMNb,EAAYmB,IACV7D,EACEyD,EACAC,EACAzb,KAAKmZ,OAAOkB,UACZkB,IAUJ,MAAM,UAAEM,EAAS,qBAAEC,SAA+B9b,KAAKoZ,WAAW2C,mBAAmB,aAKrF,OAJAtB,EAAYuB,gBAAkBH,EAC9BpB,EAAYqB,qBAAuBA,EACnCrB,EAAYwB,SAAWjc,KAAKmZ,OAAOkB,UAE5BI,CACT,CAQA,yBAAMU,CAAoBH,GACxB,IAAIkB,EACAC,EACAC,EAAU,EAyDd,OAvD4B,IAAIC,SAAQrF,MAAOsF,EAASC,KACtD,MAKMC,EAAoBxF,UACxBlN,QAAQjI,IAAI,iCAAiCua,EAAU,KAAKpc,KAAK4Y,OAAOM,iBAExE,IACE,MAAMuD,QAAezc,KAAKoZ,WAAWsD,mBAAmB1B,GAGxD,GAFAlR,QAAQjI,IAAI,sBAAuB4a,GAAQlb,OAAOob,oBAE7CF,GAAQlb,MAWN,CACL,MAAMqb,EAAgBH,EAAOlb,MAAMqb,cAEnC,GAAIH,EAAOlb,MAAMsZ,IAIf,OAHAgC,cAAcV,GACdW,aAAaZ,QACbK,EAAO,IAAIvQ,MAAM,gCAInB,GAAI4Q,GAAiB5c,KAAK4Y,OAAOI,oBACO,cAApCyD,EAAOlb,MAAMob,mBAIf,OAHAE,cAAcV,GACdW,aAAaZ,QACbI,EAAQG,EAGZ,MA3BE,GAAIL,GAAWpc,KAAK4Y,OAAOM,cAQzB,OAPA2D,cAAcV,GACdW,aAAaZ,QACbI,EAAQ,CACNG,OAAQ,UACRzB,YACAI,YAAa,yBAAyBJ,MAuB5CoB,GACF,CAAE,MAAOvB,GACP/Q,QAAQiT,KAAK,6BAA8BlC,GAC3CuB,GACF,GAGFF,EAAYc,YAjDIC,KACdJ,cAAcV,GACdI,EAAO,IAAIvQ,MAAM,oCAAoC,GA+CvBhM,KAAK4Y,OAAOK,oBAC5CkD,EAAae,YAAYV,EAAmB,WACtCA,GAAmB,GAI7B,EChUF,MAAMW,EACJrL,WAAAA,GACE9R,KAAKmZ,OAAS,IAChB,CAMA,uBAAMiE,GACJ,IAAKC,OAAOC,SAAWD,OAAOC,OAAOC,UACnC,MAAM,IAAIvR,MAAM,4EAElB,OAAO,CACT,CAOA,aAAMiO,GAAsB,IAAdF,EAAOzU,UAAAhD,OAAA,QAAAmC,IAAAa,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvB,UACQtF,KAAKod,oBAGX,UACQC,OAAOC,OAAOnD,YACtB,CAAE,MAAOU,GACP/Q,QAAQjI,IAAI,uCACd,CAGA,MAAM2b,EAAiB,CACrBC,eAAe,EACfC,iBAAiB,KACd3D,GAGC4D,QAAiBN,OAAOC,OAAOrD,QAAQuD,GAK7C,OAJAxd,KAAKmZ,OAAS,CACZkB,UAAW,IAAIvD,EAAAA,UAAU6G,EAAStD,UAAUjV,aAGvCpF,KAAKmZ,MACd,CAAE,MAAOpP,GACP,GAAIA,EAAMqI,QAAQtG,SAAS,iBACzB,MAAM,IAAIE,MAAM,+BAElB,MAAMjC,CACR,CACF,CAMA,gBAAMoQ,GACJ,IAGE,aAFMkD,OAAOC,OAAOnD,aACpBna,KAAKmZ,OAAS,MACP,CACT,CAAE,MAAOpP,GACP,MAAMA,CACR,CACF,CASA,qBAAMqQ,CAAgBhB,EAAYlC,EAAOlB,GACvC,MAAM4H,QAAsBxE,EAAWyE,8BACrC3G,EACA,CAAEC,KAAM,IAAIL,EAAAA,UAAUd,KAGxB,OAAI4H,EAAcrc,MAAMe,OAAS,EACxBsb,EAAcrc,MAAM,GAAGuc,QAAQhZ,KAAK4C,OAAOqW,KAAKC,YAAYC,SAG9D,CACT,CAOA,4BAAMhD,CAAuBR,GAC3B,IACE,MAAMyD,EAAO,CACXC,eAAe,EACfC,oBAAqB,YACrBC,WAAY,GAId,aADqBhB,OAAOC,OAAOrC,uBAAuBR,EAAayD,IACzDlD,SAChB,CAAE,MAAOjR,GACP,GAAIA,EAAMqI,QAAQtG,SAAS,iBACzB,MAAM,IAAIE,MAAM,oCAElB,MAAMjC,CACR,CACF,ECjGF,SACE4O,iBAAgB,EAChBwE,eAAc,EACdtH,cAAa,EACbyI,iBAAgB,EAChBC,gBAAeA,GAIV,SAASC,IACd,MAAMC,EAAY,IAAI9F,EADqBrT,UAAAhD,OAAA,QAAAmC,IAAAa,UAAA,GAAAA,UAAA,GAAG,CAAC,GAEzCoZ,EAAiB,IAAIvB,EAK3B,OAFAsB,EAAU7E,iBAAiB8E,GAEpB,CACLD,YACAC,iBACApF,cAAemF,EAAUnF,cAGzB,UAAME,GAEJ,aADMiF,EAAUjF,OACTxZ,IACT,EAEJ","sources":["webpack://TBallPaySDK/webpack/universalModuleDefinition","webpack://TBallPaySDK/external umd \"solanaWeb3\"","webpack://TBallPaySDK/./node_modules/ieee754/index.js","webpack://TBallPaySDK/./node_modules/buffer/index.js","webpack://TBallPaySDK/./node_modules/base64-js/index.js","webpack://TBallPaySDK/external umd \"BN\"","webpack://TBallPaySDK/webpack/bootstrap","webpack://TBallPaySDK/webpack/runtime/compat get default export","webpack://TBallPaySDK/webpack/runtime/define property getters","webpack://TBallPaySDK/webpack/runtime/hasOwnProperty shorthand","webpack://TBallPaySDK/webpack/runtime/make namespace object","webpack://TBallPaySDK/./src/token/TokenRegistry.js","webpack://TBallPaySDK/./src/utils/transaction.js","webpack://TBallPaySDK/./src/utils/validation.js","webpack://TBallPaySDK/./src/core/PaymentProcessor.js","webpack://TBallPaySDK/./src/wallet/PhantomAdapter.js","webpack://TBallPaySDK/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"solanaWeb3\"), require(\"BN\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TBallPaySDK\", [\"solanaWeb3\", \"BN\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TBallPaySDK\"] = factory(require(\"solanaWeb3\"), require(\"BN\"));\n\telse\n\t\troot[\"TBallPaySDK\"] = factory(root[\"solanaWeb3\"], root[\"BN\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__620__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__620__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/token/TokenRegistry.js\n\n/**\n * Registry for managing supported tokens\n */\nclass TokenRegistry {\n    constructor() {\n      this.tokens = {\n        // Default tokens\n        'TBALL': {\n          name: 'Tetherball',\n          symbol: 'TBALL',\n          mintAddress: 'CWnzqQVFaD7sKsZyh116viC48G7qLz8pa5WhFpBEg9wM',\n          decimals: 9,\n          maxTransferAmount: 1000,\n          logoUrl: 'https://example.com/tball-logo.png'\n        }\n        // Additional tokens can be added here\n      };\n    }\n    \n    /**\n     * Get token by symbol or mint address\n     * @param {string} tokenIdentifier - Token symbol or mint address\n     * @returns {Object|null} - Token info or null if not found\n     */\n    getToken(tokenIdentifier) {\n      // Check if direct lookup by token symbol works\n      if (this.tokens[tokenIdentifier]) {\n        return this.tokens[tokenIdentifier];\n      }\n      \n      // Otherwise search by mint address\n      return Object.values(this.tokens).find(\n        token => token.mintAddress === tokenIdentifier\n      ) || null;\n    }\n    \n    /**\n     * Add a new token to the registry\n     * @param {Object} tokenInfo - Token information\n     * @returns {Object} - Added token info\n     */\n    addToken(tokenInfo) {\n      if (!tokenInfo.symbol || !tokenInfo.mintAddress) {\n        throw new Error('Token must have symbol and mintAddress');\n      }\n      \n      this.tokens[tokenInfo.symbol] = {\n        name: tokenInfo.name || tokenInfo.symbol,\n        symbol: tokenInfo.symbol,\n        mintAddress: tokenInfo.mintAddress,\n        decimals: tokenInfo.decimals || 9,\n        maxTransferAmount: tokenInfo.maxTransferAmount || 1000,\n        logoUrl: tokenInfo.logoUrl || null\n      };\n      \n      return this.tokens[tokenInfo.symbol];\n    }\n    \n    /**\n     * Get all tokens in the registry\n     * @returns {Object} - All tokens\n     */\n    getAllTokens() {\n      return this.tokens;\n    }\n    \n    /**\n     * Remove a token from the registry\n     * @param {string} symbol - Token symbol\n     * @returns {boolean} - True if token was removed\n     */\n    removeToken(symbol) {\n      if (this.tokens[symbol]) {\n        delete this.tokens[symbol];\n        return true;\n      }\n      return false;\n    }\n  }\n  \n  export { TokenRegistry };","// src/utils/transaction.js\nimport { PublicKey, SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport BN from 'bn.js';\n\n// Constants\nconst TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nconst ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n\n/**\n * Find the associated token account address\n * @param {PublicKey} owner - Account owner\n * @param {PublicKey} mint - Token mint address\n * @returns {Promise<PublicKey>} - Associated token account address\n */\nexport async function findAssociatedTokenAccount(owner, mint) {\n  return PublicKey.findProgramAddressSync(\n    [\n      owner.toBuffer(),\n      TOKEN_PROGRAM_ID.toBuffer(),\n      mint.toBuffer(),\n    ],\n    ASSOCIATED_TOKEN_PROGRAM_ID\n  )[0];\n}\n\n/**\n * Create instruction to create an associated token account\n * @param {PublicKey} payer - Fee payer\n * @param {PublicKey} owner - Account owner\n * @param {PublicKey} mint - Token mint\n * @returns {TransactionInstruction} - Transaction instruction\n */\nexport function createAssociatedTokenAccountInstruction(payer, owner, mint) {\n  return new TransactionInstruction({\n    keys: [\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: findAssociatedTokenAccount(owner, mint), isSigner: false, isWritable: true },\n      { pubkey: owner, isSigner: false, isWritable: false },\n      { pubkey: mint, isSigner: false, isWritable: false },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      { pubkey: ASSOCIATED_TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ],\n    programId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\n/**\n * Create instruction to transfer tokens\n * @param {PublicKey} source - Source account\n * @param {PublicKey} destination - Destination account\n * @param {PublicKey} owner - Token owner\n * @param {number} amount - Amount to transfer (in raw units)\n * @returns {TransactionInstruction} - Transaction instruction\n */\nexport function createTransferInstruction(source, destination, owner, amount) {\n  return new TransactionInstruction({\n    keys: [\n      { pubkey: source, isSigner: false, isWritable: true },\n      { pubkey: destination, isSigner: false, isWritable: true },\n      { pubkey: owner, isSigner: true, isWritable: false },\n    ],\n    programId: TOKEN_PROGRAM_ID,\n    data: Buffer.from([3, ...new BN(amount).toArray('le', 8)]), // 3 is the instruction index for transfer\n  });\n}","// src/utils/validation.js\nimport { PublicKey } from '@solana/web3.js';\n\n/**\n * Check if a string is a valid Solana address\n * @param {string} address - Address to validate\n * @returns {boolean} - True if address is valid\n */\nexport function isValidSolanaAddress(address) {\n  try {\n    new PublicKey(address);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validate payment parameters\n * @param {Object} params - Payment parameters\n * @param {string} params.recipient - Recipient address\n * @param {number} params.amount - Amount to send\n * @param {Object} tokenInfo - Token information\n * @returns {Object} - Validation result {isValid, error}\n */\nexport function validatePaymentParams(params, tokenInfo) {\n  const { recipient, amount } = params;\n  \n  if (!recipient || !isValidSolanaAddress(recipient)) {\n    return {\n      isValid: false,\n      error: 'Invalid recipient address'\n    };\n  }\n  \n  if (!tokenInfo) {\n    return {\n      isValid: false,\n      error: 'Invalid token'\n    };\n  }\n  \n  if (isNaN(amount) || amount <= 0) {\n    return {\n      isValid: false,\n      error: 'Amount must be greater than 0'\n    };\n  }\n  \n  if (tokenInfo.maxTransferAmount && amount > tokenInfo.maxTransferAmount) {\n    return {\n      isValid: false,\n      error: `Amount exceeds maximum transfer amount of ${tokenInfo.maxTransferAmount} ${tokenInfo.symbol}`\n    };\n  }\n  \n  return {\n    isValid: true,\n    error: null\n  };\n}","// src/core/PaymentProcessor.js\nimport { Connection, PublicKey, Transaction } from '@solana/web3.js';\nimport { TokenRegistry } from '../token/TokenRegistry';\nimport { findAssociatedTokenAccount, createAssociatedTokenAccountInstruction, createTransferInstruction } from '../utils/transaction';\nimport { isValidSolanaAddress } from '../utils/validation';\n\n/**\n * Core Payment Processor for Solana token payments\n */\nclass PaymentProcessor {\n  /**\n   * Create a new payment processor\n   * @param {Object} config - Configuration options\n   */\n  constructor(config = {}) {\n    this.config = {\n      network: config.network || 'mainnet-beta',\n      rpcEndpoint: config.rpcEndpoint || null,\n      commitment: config.commitment || 'processed',\n      confirmationBlocks: config.confirmationBlocks || 32,\n      transactionTimeout: config.transactionTimeout || 90000,\n      retryAttempts: config.retryAttempts || 5,\n      ...config\n    };\n    \n    this.wallet = null;\n    this.connection = null;\n    this.walletAdapter = null;\n    this.tokenRegistry = new TokenRegistry();\n    this.initialized = false;\n  }\n  \n  /**\n   * Initialize the payment processor\n   * @returns {Promise<boolean>} - True if initialization was successful\n   */\n  async init() {\n    try {\n      if (this.initialized) return true;\n      \n      console.log('Initializing payment processor...');\n      \n      // Get RPC endpoint (from config or fetch from server)\n      if (!this.config.rpcEndpoint) {\n        this.config.rpcEndpoint = `https://rpc.helius.xyz/?api-key=bbcc6a7a-9027-4cb3-a131-83844043ba33`;\n      }\n      \n      // Initialize Solana connection\n      this.connection = new Connection(this.config.rpcEndpoint, {\n        commitment: this.config.commitment,\n        wsEndpoint: this.config.rpcEndpoint.replace('https', 'wss'),\n        confirmTransactionInitialTimeout: 120000,\n      });\n      \n      this.initialized = true;\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize payment processor:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Set wallet adapter to use for transactions\n   * @param {Object} adapter - Wallet adapter\n   */\n  setWalletAdapter(adapter) {\n    this.walletAdapter = adapter;\n  }\n  \n  /**\n   * Connect to wallet\n   * @param {Object} options - Connection options\n   * @returns {Promise<Object>} - Wallet account info\n   */\n  async connectWallet(options = {}) {\n    try {\n      await this.init();\n      \n      if (!this.walletAdapter) {\n        throw new Error('No wallet adapter set. Call setWalletAdapter() first.');\n      }\n      \n      const walletAccount = await this.walletAdapter.connect(options);\n      this.wallet = walletAccount;\n      return walletAccount;\n    } catch (error) {\n      console.error('Wallet connection error:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Disconnect wallet\n   * @returns {Promise<boolean>} - True if disconnection was successful\n   */\n  async disconnectWallet() {\n    try {\n      if (!this.walletAdapter) {\n        throw new Error('No wallet adapter set');\n      }\n      \n      await this.walletAdapter.disconnect();\n      this.wallet = null;\n      return true;\n    } catch (error) {\n      console.error('Wallet disconnection error:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Get token balance\n   * @param {string} tokenIdentifier - Token symbol or mint address\n   * @returns {Promise<number>} - Token balance\n   */\n  async getTokenBalance(tokenIdentifier) {\n    try {\n      if (!this.wallet) throw new Error('Wallet not connected');\n      \n      const tokenInfo = this.tokenRegistry.getToken(tokenIdentifier);\n      if (!tokenInfo) throw new Error(`Unknown token: ${tokenIdentifier}`);\n      \n      return await this.walletAdapter.getTokenBalance(\n        this.connection, \n        this.wallet.publicKey, \n        tokenInfo.mintAddress\n      );\n    } catch (error) {\n      console.error('Error getting token balance:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Send tokens\n   * @param {Object} params - Payment parameters\n   * @param {string} params.recipient - Recipient address\n   * @param {number} params.amount - Amount to send\n   * @param {string} params.tokenMint - Token identifier (symbol or mint address)\n   * @param {string} [params.memo] - Optional memo to include\n   * @returns {Promise<Object>} - Transaction result\n   */\n  async sendTokens(params) {\n    try {\n      const { recipient, amount, tokenMint, memo } = params;\n      \n      if (!this.wallet) throw new Error('Wallet not connected');\n      if (!this.walletAdapter) throw new Error('No wallet adapter set');\n      \n      // Validate inputs\n      if (!recipient || !isValidSolanaAddress(recipient)) {\n        throw new Error('Invalid recipient address');\n      }\n      \n      const tokenInfo = this.tokenRegistry.getToken(tokenMint);\n      if (!tokenInfo) throw new Error(`Unknown token: ${tokenMint}`);\n      \n      if (isNaN(amount) || amount <= 0 || amount > tokenInfo.maxTransferAmount) {\n        throw new Error(`Amount must be between 0 and ${tokenInfo.maxTransferAmount} ${tokenInfo.symbol}`);\n      }\n      \n      // Create and send transaction\n      const transaction = await this.createTokenTransferTransaction({\n        recipient,\n        amount,\n        tokenMint,\n        memo\n      });\n      \n      // Simulate transaction first\n      const simulation = await this.connection.simulateTransaction(transaction);\n      if (simulation.value.err) {\n        throw new Error(`Transaction simulation failed: ${JSON.stringify(simulation.value.err)}`);\n      }\n      \n      // Sign and send transaction\n      const signature = await this.walletAdapter.signAndSendTransaction(transaction);\n      \n      // Confirm transaction\n      const confirmation = await this.waitForConfirmation(signature);\n      \n      return {\n        signature,\n        confirmation,\n        explorerUrl: `https://solscan.io/tx/${signature}`\n      };\n    } catch (error) {\n      console.error('Payment error:', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Create token transfer transaction\n   * @param {Object} params - Transfer parameters\n   * @returns {Promise<Transaction>} - Prepared transaction\n   * @private\n   */\n  async createTokenTransferTransaction(params) {\n    const { recipient, amount, tokenMint, memo } = params;\n    \n    const recipientPubKey = new PublicKey(recipient);\n    const tokenInfo = this.tokenRegistry.getToken(tokenMint);\n    const mintPubKey = new PublicKey(tokenInfo.mintAddress);\n    \n    // Calculate token amount with decimals\n    const transferAmount = Math.floor(amount * Math.pow(10, tokenInfo.decimals));\n    \n    // Get associated token accounts\n    const senderTokenAccount = await findAssociatedTokenAccount(\n      this.wallet.publicKey,\n      mintPubKey\n    );\n    \n    const recipientTokenAccount = await findAssociatedTokenAccount(\n      recipientPubKey,\n      mintPubKey\n    );\n    \n    // Initialize transaction\n    let transaction = new Transaction();\n    \n    // Check if recipient token account exists and create if needed\n    const recipientAccountInfo = await this.connection.getAccountInfo(recipientTokenAccount);\n    if (!recipientAccountInfo) {\n      transaction.add(\n        createAssociatedTokenAccountInstruction(\n          this.wallet.publicKey,\n          recipientPubKey,\n          mintPubKey\n        )\n      );\n    }\n    \n    // Add transfer instruction\n    transaction.add(\n      createTransferInstruction(\n        senderTokenAccount,\n        recipientTokenAccount,\n        this.wallet.publicKey,\n        transferAmount\n      )\n    );\n    \n    // Add memo if provided\n    if (memo) {\n      // Memo instruction logic would go here\n    }\n    \n    // Get recent blockhash\n    const { blockhash, lastValidBlockHeight } = await this.connection.getLatestBlockhash('confirmed');\n    transaction.recentBlockhash = blockhash;\n    transaction.lastValidBlockHeight = lastValidBlockHeight;\n    transaction.feePayer = this.wallet.publicKey;\n    \n    return transaction;\n  }\n  \n  /**\n   * Wait for transaction confirmation\n   * @param {string} signature - Transaction signature\n   * @returns {Promise<Object>} - Confirmation status\n   * @private\n   */\n  async waitForConfirmation(signature) {\n    let timeoutId;\n    let intervalId;\n    let attempt = 0;\n\n    const confirmationPromise = new Promise(async (resolve, reject) => {\n      const timeout = () => {\n        clearInterval(intervalId);\n        reject(new Error('Transaction confirmation timeout'));\n      };\n\n      const checkConfirmation = async () => {\n        console.log(`Checking confirmation attempt ${attempt + 1}/${this.config.retryAttempts}`);\n        \n        try {\n          const status = await this.connection.getSignatureStatus(signature);\n          console.log('Transaction status:', status?.value?.confirmationStatus);\n          \n          if (!status?.value) {\n            if (attempt >= this.config.retryAttempts) {\n              clearInterval(intervalId);\n              clearTimeout(timeoutId);\n              resolve({ \n                status: 'pending', \n                signature, \n                explorerUrl: `https://solscan.io/tx/${signature}`\n              });\n              return;\n            }\n          } else {\n            const confirmations = status.value.confirmations;\n\n            if (status.value.err) {\n              clearInterval(intervalId);\n              clearTimeout(timeoutId);\n              reject(new Error('Transaction failed on chain'));\n              return;\n            }\n\n            if (confirmations >= this.config.confirmationBlocks || \n                status.value.confirmationStatus === 'finalized') {\n              clearInterval(intervalId);\n              clearTimeout(timeoutId);\n              resolve(status);\n              return;\n            }\n          }\n          \n          attempt++;\n        } catch (err) {\n          console.warn('Confirmation check failed:', err);\n          attempt++;\n        }\n      };\n\n      timeoutId = setTimeout(timeout, this.config.transactionTimeout);\n      intervalId = setInterval(checkConfirmation, 2000);\n      await checkConfirmation(); // Check immediately\n    });\n\n    return confirmationPromise;\n  }\n}\n\nexport { PaymentProcessor };","// src/wallet/PhantomAdapter.js\nimport { PublicKey } from '@solana/web3.js';\n\n/**\n * Wallet adapter for Phantom wallet\n */\nclass PhantomAdapter {\n  constructor() {\n    this.wallet = null;\n  }\n  \n  /**\n   * Check if wallet is available\n   * @returns {Promise<boolean>} - True if wallet is available\n   */\n  async checkAvailability() {\n    if (!window.solana || !window.solana.isPhantom) {\n      throw new Error('Phantom Wallet not detected. Please install it from https://phantom.app/');\n    }\n    return true;\n  }\n  \n  /**\n   * Connect to wallet\n   * @param {Object} options - Connection options\n   * @returns {Promise<Object>} - Wallet account info\n   */\n  async connect(options = {}) {\n    try {\n      await this.checkAvailability();\n      \n      // Disconnect existing connection if any\n      try {\n        await window.solana.disconnect();\n      } catch (err) {\n        console.log('No existing connection to disconnect');\n      }\n      \n      // Connect with options\n      const connectOptions = {\n        onlyIfTrusted: false,\n        forceReapproval: true, // Always force user to re-approve\n        ...options\n      };\n      \n      const response = await window.solana.connect(connectOptions);\n      this.wallet = {\n        publicKey: new PublicKey(response.publicKey.toString())\n      };\n      \n      return this.wallet;\n    } catch (error) {\n      if (error.message.includes('User rejected')) {\n        throw new Error('Connection rejected by user');\n      }\n      throw error;\n    }\n  }\n  \n  /**\n   * Disconnect from wallet\n   * @returns {Promise<boolean>} - True if disconnection was successful\n   */\n  async disconnect() {\n    try {\n      await window.solana.disconnect();\n      this.wallet = null;\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  }\n  \n  /**\n   * Get token balance\n   * @param {Connection} connection - Solana connection\n   * @param {PublicKey} owner - Token owner\n   * @param {string} mintAddress - Token mint address\n   * @returns {Promise<number>} - Token balance\n   */\n  async getTokenBalance(connection, owner, mintAddress) {\n    const tokenAccounts = await connection.getParsedTokenAccountsByOwner(\n      owner,\n      { mint: new PublicKey(mintAddress) }\n    );\n    \n    if (tokenAccounts.value.length > 0) {\n      return tokenAccounts.value[0].account.data.parsed.info.tokenAmount.uiAmount;\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Sign and send transaction\n   * @param {Transaction} transaction - Transaction to sign and send\n   * @returns {Promise<string>} - Transaction signature\n   */\n  async signAndSendTransaction(transaction) {\n    try {\n      const opts = {\n        skipPreflight: false,\n        preflightCommitment: 'processed',\n        maxRetries: 5\n      };\n      \n      const signed = await window.solana.signAndSendTransaction(transaction, opts);\n      return signed.signature;\n    } catch (error) {\n      if (error.message.includes('User rejected')) {\n        throw new Error('Transaction was rejected by user');\n      }\n      throw error;\n    }\n  }\n}\n\nexport { PhantomAdapter };","// src/index.js\nimport { PaymentProcessor } from './core/PaymentProcessor';\nimport { PhantomAdapter } from './wallet/PhantomAdapter';\nimport { TokenRegistry } from './token/TokenRegistry';\nimport * as TransactionUtils from './utils/transaction';\nimport * as ValidationUtils from './utils/validation';\n\n// Export all components\nexport {\n  PaymentProcessor,\n  PhantomAdapter,\n  TokenRegistry,\n  TransactionUtils,\n  ValidationUtils\n};\n\n// Default export for easier importing\nexport default {\n  PaymentProcessor,\n  PhantomAdapter,\n  TokenRegistry,\n  TransactionUtils,\n  ValidationUtils\n};\n\n// Helper function to create a pre-configured SDK instance\nexport function createSolanaPaymentSDK(config = {}) {\n  const processor = new PaymentProcessor(config);\n  const phantomAdapter = new PhantomAdapter();\n  \n  // Set up the wallet adapter\n  processor.setWalletAdapter(phantomAdapter);\n  \n  return {\n    processor,\n    phantomAdapter,\n    tokenRegistry: processor.tokenRegistry,\n    \n    // Initialize everything\n    async init() {\n      await processor.init();\n      return this;\n    }\n  };\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__620__","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","length","RangeError","buf","Uint8Array","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","len","checked","undefined","numberIsNaN","type","Array","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","num","output","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","key","o","prop","hasOwnProperty","r","toStringTag","TokenRegistry","tokens","symbol","mintAddress","decimals","maxTransferAmount","logoUrl","getToken","tokenIdentifier","values","find","token","addToken","tokenInfo","getAllTokens","removeToken","TOKEN_PROGRAM_ID","PublicKey","ASSOCIATED_TOKEN_PROGRAM_ID","async","findAssociatedTokenAccount","owner","mint","findProgramAddressSync","toBuffer","createAssociatedTokenAccountInstruction","payer","TransactionInstruction","keys","pubkey","isSigner","isWritable","SystemProgram","programId","createTransferInstruction","source","destination","amount","BN","toArray","isValidSolanaAddress","address","validatePaymentParams","params","recipient","isValid","PaymentProcessor","config","network","rpcEndpoint","commitment","confirmationBlocks","transactionTimeout","retryAttempts","wallet","connection","walletAdapter","tokenRegistry","initialized","init","Connection","wsEndpoint","confirmTransactionInitialTimeout","setWalletAdapter","adapter","connectWallet","options","walletAccount","connect","disconnectWallet","disconnect","getTokenBalance","publicKey","sendTokens","tokenMint","memo","transaction","createTokenTransferTransaction","simulation","simulateTransaction","err","JSON","stringify","signature","signAndSendTransaction","confirmation","waitForConfirmation","explorerUrl","recipientPubKey","mintPubKey","transferAmount","senderTokenAccount","recipientTokenAccount","Transaction","getAccountInfo","add","blockhash","lastValidBlockHeight","getLatestBlockhash","recentBlockhash","feePayer","timeoutId","intervalId","attempt","Promise","resolve","reject","checkConfirmation","status","getSignatureStatus","confirmationStatus","confirmations","clearInterval","clearTimeout","warn","setTimeout","timeout","setInterval","PhantomAdapter","checkAvailability","window","solana","isPhantom","connectOptions","onlyIfTrusted","forceReapproval","response","tokenAccounts","getParsedTokenAccountsByOwner","account","info","tokenAmount","uiAmount","opts","skipPreflight","preflightCommitment","maxRetries","TransactionUtils","ValidationUtils","createSolanaPaymentSDK","processor","phantomAdapter"],"sourceRoot":""}
</file>

<file path="tball-pay-sdk/src/core/PaymentProcessor.js">
// src/core/PaymentProcessor.js
import { Connection, PublicKey, Transaction } from '@solana/web3.js';
import { TokenRegistry } from '../token/TokenRegistry';
import { findAssociatedTokenAccount, createAssociatedTokenAccountInstruction, createTransferInstruction } from '../utils/transaction';
import { isValidSolanaAddress } from '../utils/validation';

/**
 * Core Payment Processor for Solana token payments
 */
class PaymentProcessor {
  /**
   * Create a new payment processor
   * @param {Object} config - Configuration options
   */
  constructor(config = {}) {
    this.config = {
      network: config.network || 'mainnet-beta',
      rpcEndpoint: config.rpcEndpoint || null,
      commitment: config.commitment || 'processed',
      confirmationBlocks: config.confirmationBlocks || 32,
      transactionTimeout: config.transactionTimeout || 90000,
      retryAttempts: config.retryAttempts || 5,
      ...config
    };
    
    this.wallet = null;
    this.connection = null;
    this.walletAdapter = null;
    this.tokenRegistry = new TokenRegistry();
    this.initialized = false;
  }
  
  /**
   * Initialize the payment processor
   * @returns {Promise<boolean>} - True if initialization was successful
   */
  async init() {
    try {
      if (this.initialized) return true;
      
      console.log('Initializing payment processor...');
      
      // Get RPC endpoint (from config or fetch from server)
      if (!this.config.rpcEndpoint) {
        this.config.rpcEndpoint = `https://rpc.helius.xyz/?api-key=bbcc6a7a-9027-4cb3-a131-83844043ba33`;
      }
      
      // Initialize Solana connection
      this.connection = new Connection(this.config.rpcEndpoint, {
        commitment: this.config.commitment,
        wsEndpoint: this.config.rpcEndpoint.replace('https', 'wss'),
        confirmTransactionInitialTimeout: 120000,
      });
      
      this.initialized = true;
      return true;
    } catch (error) {
      console.error('Failed to initialize payment processor:', error);
      throw error;
    }
  }

  /**
   * Set wallet adapter to use for transactions
   * @param {Object} adapter - Wallet adapter
   */
  setWalletAdapter(adapter) {
    this.walletAdapter = adapter;
  }
  
  /**
   * Connect to wallet
   * @param {Object} options - Connection options
   * @returns {Promise<Object>} - Wallet account info
   */
  async connectWallet(options = {}) {
    try {
      await this.init();
      
      if (!this.walletAdapter) {
        throw new Error('No wallet adapter set. Call setWalletAdapter() first.');
      }
      
      const walletAccount = await this.walletAdapter.connect(options);
      this.wallet = walletAccount;
      return walletAccount;
    } catch (error) {
      console.error('Wallet connection error:', error);
      throw error;
    }
  }
  
  /**
   * Disconnect wallet
   * @returns {Promise<boolean>} - True if disconnection was successful
   */
  async disconnectWallet() {
    try {
      if (!this.walletAdapter) {
        throw new Error('No wallet adapter set');
      }
      
      await this.walletAdapter.disconnect();
      this.wallet = null;
      return true;
    } catch (error) {
      console.error('Wallet disconnection error:', error);
      throw error;
    }
  }
  
  /**
   * Get token balance
   * @param {string} tokenIdentifier - Token symbol or mint address
   * @returns {Promise<number>} - Token balance
   */
  async getTokenBalance(tokenIdentifier) {
    try {
      if (!this.wallet) throw new Error('Wallet not connected');
      
      const tokenInfo = this.tokenRegistry.getToken(tokenIdentifier);
      if (!tokenInfo) throw new Error(`Unknown token: ${tokenIdentifier}`);
      
      return await this.walletAdapter.getTokenBalance(
        this.connection, 
        this.wallet.publicKey, 
        tokenInfo.mintAddress
      );
    } catch (error) {
      console.error('Error getting token balance:', error);
      throw error;
    }
  }
  
  /**
   * Send tokens
   * @param {Object} params - Payment parameters
   * @param {string} params.recipient - Recipient address
   * @param {number} params.amount - Amount to send
   * @param {string} params.tokenMint - Token identifier (symbol or mint address)
   * @param {string} [params.memo] - Optional memo to include
   * @returns {Promise<Object>} - Transaction result
   */
  async sendTokens(params) {
    try {
      const { recipient, amount, tokenMint, memo } = params;
      
      if (!this.wallet) throw new Error('Wallet not connected');
      if (!this.walletAdapter) throw new Error('No wallet adapter set');
      
      // Validate inputs
      if (!recipient || !isValidSolanaAddress(recipient)) {
        throw new Error('Invalid recipient address');
      }
      
      const tokenInfo = this.tokenRegistry.getToken(tokenMint);
      if (!tokenInfo) throw new Error(`Unknown token: ${tokenMint}`);
      
      if (isNaN(amount) || amount <= 0 || amount > tokenInfo.maxTransferAmount) {
        throw new Error(`Amount must be between 0 and ${tokenInfo.maxTransferAmount} ${tokenInfo.symbol}`);
      }
      
      // Create and send transaction
      const transaction = await this.createTokenTransferTransaction({
        recipient,
        amount,
        tokenMint,
        memo
      });
      
      // Simulate transaction first
      const simulation = await this.connection.simulateTransaction(transaction);
      if (simulation.value.err) {
        throw new Error(`Transaction simulation failed: ${JSON.stringify(simulation.value.err)}`);
      }
      
      // Sign and send transaction
      const signature = await this.walletAdapter.signAndSendTransaction(transaction);
      
      // Confirm transaction
      const confirmation = await this.waitForConfirmation(signature);
      
      return {
        signature,
        confirmation,
        explorerUrl: `https://solscan.io/tx/${signature}`
      };
    } catch (error) {
      console.error('Payment error:', error);
      throw error;
    }
  }
  
  /**
   * Create token transfer transaction
   * @param {Object} params - Transfer parameters
   * @returns {Promise<Transaction>} - Prepared transaction
   * @private
   */
  async createTokenTransferTransaction(params) {
    const { recipient, amount, tokenMint, memo } = params;
    
    const recipientPubKey = new PublicKey(recipient);
    const tokenInfo = this.tokenRegistry.getToken(tokenMint);
    const mintPubKey = new PublicKey(tokenInfo.mintAddress);
    
    // Calculate token amount with decimals
    const transferAmount = Math.floor(amount * Math.pow(10, tokenInfo.decimals));
    
    // Get associated token accounts
    const senderTokenAccount = await findAssociatedTokenAccount(
      this.wallet.publicKey,
      mintPubKey
    );
    
    const recipientTokenAccount = await findAssociatedTokenAccount(
      recipientPubKey,
      mintPubKey
    );
    
    // Initialize transaction
    let transaction = new Transaction();
    
    // Check if recipient token account exists and create if needed
    const recipientAccountInfo = await this.connection.getAccountInfo(recipientTokenAccount);
    if (!recipientAccountInfo) {
      transaction.add(
        createAssociatedTokenAccountInstruction(
          this.wallet.publicKey,
          recipientPubKey,
          mintPubKey
        )
      );
    }
    
    // Add transfer instruction
    transaction.add(
      createTransferInstruction(
        senderTokenAccount,
        recipientTokenAccount,
        this.wallet.publicKey,
        transferAmount
      )
    );
    
    // Add memo if provided
    if (memo) {
      // Memo instruction logic would go here
    }
    
    // Get recent blockhash
    const { blockhash, lastValidBlockHeight } = await this.connection.getLatestBlockhash('confirmed');
    transaction.recentBlockhash = blockhash;
    transaction.lastValidBlockHeight = lastValidBlockHeight;
    transaction.feePayer = this.wallet.publicKey;
    
    return transaction;
  }
  
  /**
   * Wait for transaction confirmation
   * @param {string} signature - Transaction signature
   * @returns {Promise<Object>} - Confirmation status
   * @private
   */
  async waitForConfirmation(signature) {
    let timeoutId;
    let intervalId;
    let attempt = 0;

    const confirmationPromise = new Promise(async (resolve, reject) => {
      const timeout = () => {
        clearInterval(intervalId);
        reject(new Error('Transaction confirmation timeout'));
      };

      const checkConfirmation = async () => {
        console.log(`Checking confirmation attempt ${attempt + 1}/${this.config.retryAttempts}`);
        
        try {
          const status = await this.connection.getSignatureStatus(signature);
          console.log('Transaction status:', status?.value?.confirmationStatus);
          
          if (!status?.value) {
            if (attempt >= this.config.retryAttempts) {
              clearInterval(intervalId);
              clearTimeout(timeoutId);
              resolve({ 
                status: 'pending', 
                signature, 
                explorerUrl: `https://solscan.io/tx/${signature}`
              });
              return;
            }
          } else {
            const confirmations = status.value.confirmations;

            if (status.value.err) {
              clearInterval(intervalId);
              clearTimeout(timeoutId);
              reject(new Error('Transaction failed on chain'));
              return;
            }

            if (confirmations >= this.config.confirmationBlocks || 
                status.value.confirmationStatus === 'finalized') {
              clearInterval(intervalId);
              clearTimeout(timeoutId);
              resolve(status);
              return;
            }
          }
          
          attempt++;
        } catch (err) {
          console.warn('Confirmation check failed:', err);
          attempt++;
        }
      };

      timeoutId = setTimeout(timeout, this.config.transactionTimeout);
      intervalId = setInterval(checkConfirmation, 2000);
      await checkConfirmation(); // Check immediately
    });

    return confirmationPromise;
  }
}

export { PaymentProcessor };
</file>

<file path="tballpay-linkbuilder/styles.css">
body {
    font-family: sans-serif;
    background: #0a0a0a;
    padding: 30px;
    text-align: center;
    color: #f5f5f5;
  }
  
  .container {
    max-width: 500px;
    margin: 0 auto;
    background: #161616;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.4);
  }
  
  h1 {
    color: #ffffff;
    font-size: 24px;
  }
  
  p {
    color: #aaaaaa;
    margin-bottom: 20px;
  }
  
  label {
    display: block;
    text-align: left;
    color: #dddddd;
    margin-top: 15px;
    font-size: 14px;
  }
  
  input, button {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border-radius: 6px;
    border: 1px solid #333;
    font-size: 16px;
    box-sizing: border-box;
    background-color: #222222;
    color: #ffffff;
  }
  
  input:focus {
    border-color: #ff6b00;
    outline: none;
    box-shadow: 0 0 0 2px rgba(255, 107, 0, 0.3);
  }
  
  input::placeholder {
    color: #777777;
  }
  
  button {
    background: #ff6b00;
    color: white;
    font-weight: bold;
    cursor: pointer;
    border: none;
    transition: background-color 0.2s;
  }
  
  button:hover {
    background: #e05a00;
  }
  
  .hidden {
    display: none;
  }
  
  #output h2 {
    color: #ffffff;
    display: flex;
    align-items: center;
    margin-top: 30px;
  }
  
  #output h2:before {
    content: "🎯";
    margin-right: 8px;
  }
  
  #checkoutLink {
    font-size: 14px;
    background-color: #222222;
    padding: 12px;
    border: 1px solid #333;
    margin-bottom: 10px;
  }
  
  #copyButton {
    background-color: #333333;
    margin-bottom: 20px;
  }
  
  #copyButton:hover {
    background-color: #444444;
  }
  
  footer {
    margin-top: 30px;
  }
  
  footer a {
    color: #ff9c41;
    text-decoration: none;
  }
  
  footer a:hover {
    text-decoration: underline;
    color: #ffbb80;
  }
</file>

<file path="README.md">
# 🏐 Solana Payments SDK

A lightweight JavaScript SDK to power custom token payments on the Solana blockchain. Easily connect Phantom, manage balances, and send SPL tokens (like $TBALL) from any browser app — no smart contracts or backend required.

## 🚀 Features

- 🔐 Phantom wallet integration (connect/disconnect)
- 🪙 Send SPL tokens (e.g. TBALL) between wallets
- 🧠 Token registry with built-in metadata
- ✅ Input validation and transaction simulation
- 🔄 Real-time balance fetching
- 📦 Bundled for browser or module-based usage

## 📦 Installation

### Option 1: Import UMD bundle in browser (no build step)

```html
<script src="https://unpkg.com/@solana/web3.js@latest/lib/index.iife.js"></script>
<script src="https://unpkg.com/bn.js@5.2.1/lib/bn.js"></script>
<script src="./dist/solana-payments-sdk.js"></script>
```

### Option 2: Install via npm

```bash
npm install solana-payments-sdk
```

## 🧪 Example (Browser App)

### index.html

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Solana Payments SDK Example</title>
</head>
<body>
  <h1>Solana Payments SDK</h1>
  <button id="connectWallet">Connect Wallet</button>
  <button id="sendPayment">Send 5 TBALL</button>
  <div id="statusMessage"></div>
  <script src="https://unpkg.com/@solana/web3.js@latest/lib/index.iife.js"></script>
  <script src="https://unpkg.com/bn.js@5.2.1/lib/bn.js"></script>
  <script>
    window.BN = BN;
  </script>
  <script src="./dist/solana-payments-sdk.js"></script>
  <script>
    const { PaymentProcessor, PhantomAdapter } = SolanaPaymentsSDK;
    const processor = new PaymentProcessor({ network: 'mainnet-beta' });
    processor.setWalletAdapter(new PhantomAdapter());
    document.getElementById('connectWallet').onclick = async () => {
      await processor.init();
      await processor.connectWallet();
      alert('Wallet connected!');
    };
    document.getElementById('sendPayment').onclick = async () => {
      const result = await processor.sendTokens({
        recipient: 'EnterRecipientPublicKeyHere',
        amount: 5,
        tokenMint: 'TBALL'
      });
      document.getElementById('statusMessage').innerHTML =
        `Payment sent! <a href="${result.explorerUrl}" target="_blank">View on Solscan</a>`;
    };
  </script>
</body>
</html>
```

## ⚙️ API Overview

### PaymentProcessor(config)
- `network`: Solana cluster (e.g. 'mainnet-beta')
- `rpcEndpoint`: Optional custom RPC endpoint

#### Methods
- `init()` – Initialize SDK and Solana connection
- `setWalletAdapter(adapter)` – Attach a wallet adapter
- `connectWallet()` – Prompt Phantom to connect
- `disconnectWallet()` – Disconnect the wallet
- `getTokenBalance(tokenSymbolOrMint)` – Get the wallet's token balance
- `sendTokens({ recipient, amount, tokenMint })` – Send SPL tokens

### PhantomAdapter()
Adapter for Phantom Wallet. Required for connecting and signing.

### TokenRegistry
Manage supported tokens and metadata.

```javascript
const registry = new TokenRegistry();
registry.addToken({
  symbol: 'DOGE',
  mintAddress: 'YourTokenMintAddressHere',
  decimals: 9,
  maxTransferAmount: 100000
});
```

## 📁 Project Structure

```
solana-payments-sdk/
├── dist/                      # Bundled SDK (UMD)
├── examples/simple-payment/   # Full demo: index.html + app.js
├── src/
│   ├── core/PaymentProcessor.js
│   ├── wallet/PhantomAdapter.js
│   ├── token/TokenRegistry.js
│   └── utils/
│       ├── transaction.js
│       └── validation.js
├── webpack.config.js
└── package.json
```

## 🛡️ Security & Best Practices

- Always simulate and confirm transactions before marking them complete
- Validate addresses with `isValidSolanaAddress()` before sending
- Never hardcode private keys or RPC endpoints client-side
- Always check balances and limits before sending transactions

## 🧠 TODOs & Roadmap

- [ ] Add support for TransferChecked instruction
- [ ] Support other wallets (e.g. Solflare, Backpack)
- [ ] React/Vue wrappers
- [ ] Token swap & NFT utilities
- [ ] Add TypeScript types

## 👨‍🍳 Created by Zack Adams

Built for memecoins, games, marketplaces, and crypto-native experiences.
Let the blockchain be your backend.

## 🧵 Feedback / Issues

Open a GitHub issue or contact @hackingbaseball on Twitter.
</file>

<file path="tball-pay-sdk/examples/checkout/index.html">
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Buy with TBALL</title>
  <style>
    body { 
      font-family: sans-serif; 
      text-align: center; 
      padding: 40px; 
      background: #0a0a0a; 
      color: #f5f5f5;
    }
    
    .card { 
      background: #161616; 
      padding: 30px; 
      border-radius: 12px; 
      max-width: 400px; 
      margin: 0 auto; 
      box-shadow: 0 8px 16px rgba(0,0,0,0.4); 
    }
    
    h1 { 
      font-size: 24px; 
      margin-bottom: 10px; 
      color: #ffffff;
    }
    
    p { 
      font-size: 18px; 
      color: #aaaaaa;
    }
    
    button { 
      padding: 12px 20px; 
      font-size: 16px; 
      background-color: #ff6b00; 
      color: white; 
      border: none; 
      border-radius: 6px; 
      cursor: pointer; 
      margin-top: 20px; 
      transition: background-color 0.2s;
    }
    
    button:hover { 
      background-color: #e05a00; 
    }
    
    #statusMessage { 
      margin-top: 20px; 
      font-weight: bold; 
      color: #dddddd;
    }
    
    a { 
      color: #ff9c41; 
      transition: color 0.2s;
    }
    
    a:hover {
      color: #ffbb80;
    }
  </style>
</head>
<body>
  <div class="card">
    <h1 id="itemLabel">Loading...</h1>
    <p id="priceText"></p>
    <button id="buyButton">Buy</button>
    <div id="statusMessage">Waiting for wallet...</div>
  </div>
  <script src="https://unpkg.com/@solana/web3.js@latest/lib/index.iife.js"></script>
  <script src="https://unpkg.com/bn.js@5.2.1/lib/bn.js"></script>
  <script>window.BN = BN;</script>
  <script src="tball-pay-sdk.umd.js"></script>
  <script>
    const { PaymentProcessor, PhantomAdapter } = TBallPaySDK;
    const sdk = new PaymentProcessor({ network: 'mainnet-beta' });
    sdk.setWalletAdapter(new PhantomAdapter());
    // Parse query parameters
    const urlParams = new URLSearchParams(window.location.search);
    const recipient = urlParams.get('recipient');
    const amount = parseFloat(urlParams.get('amount'));
    const label = urlParams.get('label') || 'Unnamed Item';
    document.getElementById('itemLabel').textContent = label;
    document.getElementById('priceText').textContent = `Pay ${amount} TBALL to complete your purchase`;
    document.getElementById('buyButton').textContent = `Buy ${label} for ${amount} TBALL`;
    async function buy() {
      const status = document.getElementById('statusMessage');
      try {
        if (!recipient || isNaN(amount)) {
          status.textContent = 'Missing or invalid recipient or amount.';
          status.style.color = '#ff6b6b'; // Error color
          return;
        }
        status.textContent = 'Connecting wallet...';
        status.style.color = '#dddddd'; // Reset color
        await sdk.init();
        await sdk.connectWallet();
        status.textContent = 'Sending payment...';
        const result = await sdk.sendTokens({
          recipient,
          amount,
          tokenMint: 'TBALL'
        });
        status.innerHTML = `✅ Payment sent!<br><a href="${result.explorerUrl}" target="_blank">View on Solscan</a>`;
        status.style.color = '#ffbb80'; // Success color
      } catch (err) {
        console.error(err);
        status.textContent = `❌ Error: ${err.message}`;
        status.style.color = '#ff6b6b'; // Error color
      }
    }
    document.getElementById('buyButton').onclick = buy;
  </script>
</body>
</html>
</file>

<file path="tballpay-linkbuilder/script.js">
document.getElementById('builderForm').addEventListener('submit', (e) => {
    e.preventDefault();
  
    const label = encodeURIComponent(document.getElementById('label').value.trim());
    const amount = parseFloat(document.getElementById('amount').value.trim());
    const recipient = document.getElementById('recipient').value.trim();
  
    if (!label || !amount || !recipient) return;


//live


    const baseUrl = 'https://tballcheckout.vercel.app';


  

    const link = `${baseUrl}/?recipient=${recipient}&amount=${amount}&label=${label}`;
  
    const output = document.getElementById('output');
    const linkBox = document.getElementById('checkoutLink');
    output.classList.remove('hidden');
    linkBox.value = link;
  });
  
  document.getElementById('copyButton').addEventListener('click', () => {
    const link = document.getElementById('checkoutLink');
    link.select();
    document.execCommand('copy');
    alert('Link copied to clipboard!');
  });
</file>

</files>
